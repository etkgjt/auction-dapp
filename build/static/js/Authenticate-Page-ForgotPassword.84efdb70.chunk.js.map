{"version":3,"sources":["Modules/Authenticate/assets/icon.js","Modules/Authenticate/store/formForgotPassword/selector.js","Modules/Authenticate/validation/forgotPassword.js","Modules/Authenticate/Page/ForgotPassword.js","../node_modules/classnames/index.js","../node_modules/reactstrap/es/utils.js","utility/Utils.js","components/FormField/index.js"],"names":["ForgotPasswordWrapper","width","height","viewBox","fill","xmlns","d","opacity","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","ForgotPasswordButton","clipPath","FormSignupInfoWrapper","FormSignUpAccountInfoWrapper","stroke","strokeWidth","reducer","state","formForgotPassword","formSubmitLoadingSelector","createSelector","data","formForgotPasswordLoading","formSubmitSuccessSelector","formForgotPasswordSuccess","formSubmitErrorSelector","formForgotPasswordError","formSubmitDataResponseSelector","formForgotPasswordDataResponse","getValueForm","valuesDefault","username","number_phone_or_email","validationSchema","i18n","Yup","shape","nullable","required","messageError","t","matches","emailOrPhoneRegex","ForgotPassword","useTranslation","history","useHistory","dispatch","useDispatch","useState","otpSent","setOtpSent","otpCode","setOtpCode","formData","setFormData","listAccount","setListAccount","React","startCountDown","setStartCountDown","countDown","setCountDown","error","useSelector","response","formSubmitSuccess","verifyError","formVerifyAccountErrorSelector","verifyResponse","formVerifyResponseSelector","verifySuccess","formVerifyLoadingSelector","formVerifySuccessSelector","getOtp","phoneNumber","a","sendOtp","codeLanguage","payload","res","retCode","toast","success","retText","position","autoClose","closeOnClick","pauseOnHover","draggable","progress","undefined","useEffect","setInterval","old","clearInterval","actions","formForgotPasswordFnReset","verifyActions","formVerifyAccountFnReset","length","className","style","userName","password","activeCourse","onClick","push","onChange","e","target","value","placeholder","formVerifyAccountFnMethod","otp","phone","onSubmit","values","formForgotPasswordFnMethod","initialValues","formik","ev","preventDefault","field","innerClass","handleSubmit","hasOwn","hasOwnProperty","classNames","classes","i","arguments","arg","argType","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","globalCssModule","setScrollbarWidth","padding","document","body","paddingRight","getOriginalBodyPadding","window","getComputedStyle","parseInt","getPropertyValue","conditionallyUpdateScrollbar","scrollbarWidth","scrollDiv","createElement","top","overflow","appendChild","offsetWidth","clientWidth","removeChild","getScrollbarWidth","fixedContent","querySelectorAll","bodyPadding","innerWidth","mapToCssModules","cssModule","split","map","c","omit","obj","omitKeys","result","keys","forEach","indexOf","pick","pickKeys","warned","warnOnce","message","console","Element","targetPropType","PropTypes","oneOfType","string","func","props","propName","componentName","Error","current","any","tagPropType","$$typeof","symbol","render","arrayOf","TransitionTimeouts","Fade","Collapse","Modal","Carousel","TransitionPropTypeKeys","TransitionStatuses","ENTERING","ENTERED","EXITING","EXITED","keyCodes","esc","space","enter","tab","up","down","home","end","n","p","canUseDOM","getTag","isObject","type","findDOMElements","isReactRefObj","tag","isFunction","selection","isArrayOrNodeList","els","getTarget","allElements","focusableElements","params","str","replace","RegExp","emailRegex","secretPhone","substring","messageFormat","fullNameRegex","phoneRegex","FormField","label","borderless","prepend","children","append","handleChange","handleBlur","touched","errors","submitOnEnter","disabled","multiline","onBlurCustom","touch","InputField","invalid","Boolean","onBlur","multiple","onKeyUp","keyCode","ErrorField","classnames","addonType","defaultProps","innerclass"],"mappings":"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","file":"static/js/Authenticate-Page-ForgotPassword.84efdb70.chunk.js","sourcesContent":["export const ForgotPasswordWrapper = () => (\r\n  <svg\r\n    width=\"550\"\r\n    height=\"422\"\r\n    viewBox=\"0 0 550 422\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M1.66388 28.5846C-6.81306 35.7032 19.1517 403.253 33.3022 410.006C54.3945 420.045 485.984 429.233 511.081 413.657C530.171 401.793 557.271 43.7952 548.193 33.0261C514.352 -7.25165 51.1906 -12.9709 1.66388 28.5846Z\"\r\n      fill=\"url(#paint0_linearforgotpasswordwrapper)\"\r\n    />\r\n    <path\r\n      d=\"M6.13541 28.4614C-2.07454 32.842 21.4206 399.175 37.2398 405.442C60.3344 414.568 458.817 426.493 509.012 408.18C520.292 404.103 559.072 48.1135 543.12 33.9372C500.067 -4.45442 75.4194 -8.16582 6.13541 28.4614Z\"\r\n      fill=\"#FFC61A\"\r\n    />\r\n    <path\r\n      d=\"M9.00567 31.0779C0.862462 35.3369 24.0906 396.437 39.7096 402.582C62.4705 411.526 457.216 423.147 506.742 405.259C517.822 401.244 556.87 49.1481 540.65 35.7628C499.6 2.05602 77.2884 -4.75834 9.00567 31.0779Z\"\r\n      fill=\"url(#paint1_linearforgotpasswordwrapper)\"\r\n    />\r\n    <path\r\n      d=\"M18.2168 36.1279C9.87336 43.1248 31.3661 388.893 46.2508 394.795C72.8163 405.32 453.011 415.481 500.201 398.506C510.814 394.673 547.992 52.2511 533.108 38.9266C494.995 4.67228 58.1319 2.84701 18.2168 36.1279Z\"\r\n      fill=\"#FFC61A\"\r\n    />\r\n    <path\r\n      d=\"M21.1537 39.7177C14.9462 45.011 32.434 352.266 47.252 392.908C50.2557 401.122 397.543 414.873 496.93 397.472C505.341 396.011 542.119 52.4946 526.032 40.6303C488.987 13.1295 52.3248 13.1295 21.1537 39.7177Z\"\r\n      fill=\"url(#paint2_linearforgotpasswordwrapper)\"\r\n    />\r\n    <path\r\n      d=\"M527.167 39.4133C490.055 11.9733 53.326 11.9733 22.2216 38.5006C16.0141 43.8548 33.4352 351.049 48.3199 391.691C49.1209 393.943 65.7411 396.62 91.5056 398.932C77.5554 396.072 58.7993 391.57 54.3272 383.478C49.3212 374.351 27.3612 67.4617 36.2386 48.6005C39.2423 42.212 389.6 14.7721 515.086 47.6879C531.706 52.0685 510.08 353.3 497.998 396.315C506.475 394.794 543.186 51.3384 527.167 39.4133Z\"\r\n      fill=\"url(#paint3_linearforgotpasswordwrapper)\"\r\n    />\r\n    <path\r\n      d=\"M364.503 405.077C323.12 405.077 144.236 403.434 106.457 400.574C89.3028 399.297 49.3878 395.829 47.8526 391.813C40.1099 370.64 31.9667 189.572 26.8939 141.02C24.1572 114.919 22.088 90.0949 21.0868 71.1729C20.0189 50.6082 20.2859 39.5348 21.8878 38.1354C38.0407 24.4459 258.308 18.3008 337.137 18.3008C417.901 18.3008 508.01 24.7501 527.434 39.1089C535.844 45.3149 529.703 103.785 525.365 138.1C519.224 185.861 509.746 361.331 503.205 384.999C500.067 396.376 498.732 396.619 498.132 396.741C458.417 403.616 403.55 405.077 364.503 405.077ZM337.137 19.1526C258.508 19.1526 38.5079 25.2368 22.5553 38.8656C19.8186 41.2384 22.088 86.0793 27.8283 141.02C32.9011 189.512 41.0443 370.518 48.7871 391.63C49.5213 393.577 67.6766 396.863 106.59 399.844C144.37 402.704 323.186 404.346 364.57 404.346C403.55 404.346 458.35 402.886 497.998 395.95C498.198 395.889 499.467 395.22 502.337 384.877C508.878 361.27 518.356 185.8 524.497 138.1C531.906 80.0559 532.84 44.2197 526.9 39.8999C507.61 25.541 417.701 19.1526 337.137 19.1526Z\"\r\n      fill=\"url(#paint4_linearforgotpasswordwrapper)\"\r\n    />\r\n    <path\r\n      opacity=\"0.71\"\r\n      d=\"M389.934 411.1C386.129 412.5 488.787 409.457 503.672 402.704C508.277 400.574 519.825 232.041 528.502 157.874C528.502 157.874 510.28 397.167 501.336 399.54C475.972 406.354 392.804 410.066 389.934 411.1Z\"\r\n      fill=\"#FFE58F\"\r\n    />\r\n    <path\r\n      d=\"M11.0081 77.8048C13.144 74.641 8.47167 37.527 12.1428 33.0855C19.0845 24.6893 53.7265 20.9779 51.3904 18.8484C48.5202 16.2322 10.4741 24.2634 7.27021 30.5301C4.06633 36.7969 8.13793 82.0638 11.0081 77.8048Z\"\r\n      fill=\"#FFE58F\"\r\n    />\r\n    <defs>\r\n      <linearGradient\r\n        id=\"paint0_linearforgotpasswordwrapper\"\r\n        x1=\"275.006\"\r\n        y1=\"427.009\"\r\n        x2=\"275.006\"\r\n        y2=\"10.15\"\r\n        gradientUnits=\"userSpaceOnUse\"\r\n      >\r\n        <stop stopColor=\"#FEB32C\" />\r\n        <stop offset=\"0.00304192\" stopColor=\"#FEB22C\" />\r\n        <stop offset=\"0.0667296\" stopColor=\"#FEA827\" />\r\n        <stop offset=\"0.1452\" stopColor=\"#FEA525\" />\r\n        <stop offset=\"1\" stopColor=\"#FEB336\" />\r\n      </linearGradient>\r\n      <linearGradient\r\n        id=\"paint1_linearforgotpasswordwrapper\"\r\n        x1=\"275.933\"\r\n        y1=\"416.984\"\r\n        x2=\"275.933\"\r\n        y2=\"20.3522\"\r\n        gradientUnits=\"userSpaceOnUse\"\r\n      >\r\n        <stop stopColor=\"#FFCB44\" />\r\n        <stop offset=\"1\" stopColor=\"#FFDE6C\" />\r\n      </linearGradient>\r\n      <linearGradient\r\n        id=\"paint2_linearforgotpasswordwrapper\"\r\n        x1=\"215\"\r\n        y1=\"4.00013\"\r\n        x2=\"192.03\"\r\n        y2=\"364.024\"\r\n        gradientUnits=\"userSpaceOnUse\"\r\n      >\r\n        <stop stopColor=\"#FEA525\" />\r\n        <stop offset=\"0.859375\" stopColor=\"#F16C1C\" />\r\n      </linearGradient>\r\n      <linearGradient\r\n        id=\"paint3_linearforgotpasswordwrapper\"\r\n        x1=\"276.044\"\r\n        y1=\"16.8923\"\r\n        x2=\"276.044\"\r\n        y2=\"393.8\"\r\n        gradientUnits=\"userSpaceOnUse\"\r\n      >\r\n        <stop stopColor=\"#FEA525\" />\r\n        <stop offset=\"1\" stopColor=\"#FEA526\" />\r\n      </linearGradient>\r\n      <linearGradient\r\n        id=\"paint4_linearforgotpasswordwrapper\"\r\n        x1=\"276.048\"\r\n        y1=\"18.2966\"\r\n        x2=\"276.048\"\r\n        y2=\"405.101\"\r\n        gradientUnits=\"userSpaceOnUse\"\r\n      >\r\n        <stop stopColor=\"#FD8C23\" />\r\n        <stop offset=\"1\" stopColor=\"#FEA52A\" />\r\n      </linearGradient>\r\n    </defs>\r\n  </svg>\r\n)\r\nexport const ForgotPasswordButton = () => (\r\n  <svg\r\n    width=\"303\"\r\n    height=\"63\"\r\n    viewBox=\"0 0 303 63\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <g clipPath=\"url(#clip0)\">\r\n      <path\r\n        d=\"M298.612 19.2499C297.57 17.9632 294.363 13.2793 293.16 12.7646C288.83 9.77933 215.947 2.52198 134.564 0.566094C75.8723 -0.823612 26.722 3.7058 6.67702 8.0808C6.03558 8.18374 2.90856 9.31609 2.50766 10.8602C-1.50133 20.7426 -0.699534 47.7646 5.9554 56.5661C8.20044 59.5514 236.393 67.1176 295.084 60.0661C297.65 59.7573 309.036 32.2205 298.612 19.2499Z\"\r\n        fill=\"#FEEAA8\"\r\n      />\r\n      <path\r\n        d=\"M299.574 17.7061C298.853 16.3679 292.438 12.7135 291.156 12.1987C286.986 9.36786 214.985 2.41933 134.724 0.566393C76.9147 -0.771843 23.6752 3.60316 3.8708 7.77228C3.22936 7.87522 2.74828 8.80169 2.34738 10.2943C-1.58143 19.7649 1.38522 45.6546 7.95998 54.0958C10.205 56.9267 235.27 64.184 293.16 57.4414C295.646 57.1326 306.39 31.0885 299.574 17.7061Z\"\r\n        fill=\"url(#paint0_linearforgotpasswordbutton)\"\r\n      />\r\n      <path\r\n        d=\"M3.87074 7.7723C1.70588 8.23553 0.50318 19.6105 1.86624 29.4929C3.2293 39.787 7.15811 48.4341 8.44099 49.0517C10.0446 49.8238 44.9229 51.9855 89.102 52.1914C116.042 52.2943 261.569 55.3826 287.948 51.2649C288.83 51.1105 291.957 44.0076 293.32 33.1988C294.363 24.9635 292.519 13.0738 291.155 12.1473C286.986 9.31641 214.985 2.36788 134.724 0.514943C76.9147 -0.771822 23.6752 3.60318 3.87074 7.7723Z\"\r\n        fill=\"#F68317\"\r\n      />\r\n      <path\r\n        opacity=\"0.5\"\r\n        d=\"M293.401 22.4929C293 17.2429 291.957 12.7649 291.155 12.1987C286.986 9.36786 214.985 2.41933 134.724 0.566393C76.9147 -0.771843 23.6752 3.60316 3.87074 7.77228C1.70588 8.23551 0.50318 19.6105 1.86624 29.4929C2.26714 32.5296 2.90858 35.412 3.6302 38.037C53.021 30.6252 234.548 21.8752 293.401 22.4929Z\"\r\n        fill=\"#FFC61A\"\r\n      />\r\n      <path\r\n        opacity=\"0.71\"\r\n        d=\"M3.87072 36.1836C2.02658 27.1763 2.7482 10.6542 4.83288 9.57332C8.04008 7.82332 42.9184 3.60273 67.2931 2.93361C119.57 0.20567 228.375 1.38949 287.227 11.5807C249.943 5.81596 143.945 2.93361 95.9975 4.11743C43.0787 5.24979 12.2094 9.21302 7.23828 11.2204C6.11576 12.0439 3.38964 32.4263 3.87072 36.1836Z\"\r\n        fill=\"#FFE58F\"\r\n      />\r\n      <path\r\n        d=\"M206.165 60.5294C167.277 60.5294 119.651 59.7059 75.311 58.2132C56.0678 57.5956 39.5508 56.875 27.4436 56.2059C8.20042 55.125 7.71934 54.5588 7.4788 54.25C1.06441 46.0662 -2.30315 20.1765 1.78603 10.2941C2.42747 8.08088 3.0689 7.66912 3.71034 7.56618C21.3499 3.75735 64.5669 0 113.236 0C120.452 0 127.749 0.102941 134.805 0.257353C211.457 2.05882 286.505 8.80147 291.556 11.9926C293 12.6103 299.414 16.2132 300.136 17.6544C306.55 30.2647 297.49 54.25 294.042 57.3382C293.721 57.5956 293.481 57.75 293.16 57.75C277.284 59.6029 248.019 60.5294 206.165 60.5294ZM8.44096 53.9412C12.1292 55.7427 117.245 59.9118 206.165 59.9118C247.297 59.9118 277.284 58.9338 292.919 57.1324C295.485 55.9485 305.668 30.7279 299.093 17.8088C298.452 16.5735 292.278 13.0221 290.915 12.4559L290.835 12.4044C286.746 9.625 213.621 2.72794 134.885 0.875C127.829 0.720588 120.533 0.617647 113.316 0.617647C64.7273 0.617647 21.5905 4.375 4.03106 8.08088H3.95088C3.95088 8.08088 3.38962 8.28677 2.82836 10.3456C-1.18063 20.1765 2.10675 45.8088 8.44096 53.9412Z\"\r\n        fill=\"url(#paint1_linearforgotpasswordbutton)\"\r\n      />\r\n    </g>\r\n    <defs>\r\n      <linearGradient\r\n        id=\"paint0_linearforgotpasswordbutton\"\r\n        x1=\"151.175\"\r\n        y1=\"0.309349\"\r\n        x2=\"151.175\"\r\n        y2=\"60.2217\"\r\n        gradientUnits=\"userSpaceOnUse\"\r\n      >\r\n        <stop stopColor=\"#F68317\" />\r\n        <stop offset=\"0.2581\" stopColor=\"#F57D18\" />\r\n        <stop offset=\"0.6054\" stopColor=\"#F16C1C\" />\r\n        <stop offset=\"1\" stopColor=\"#EA5023\" />\r\n      </linearGradient>\r\n      <linearGradient\r\n        id=\"paint1_linearforgotpasswordbutton\"\r\n        x1=\"151.165\"\r\n        y1=\"60.5305\"\r\n        x2=\"151.165\"\r\n        y2=\"0\"\r\n        gradientUnits=\"userSpaceOnUse\"\r\n      >\r\n        <stop stopColor=\"#FD8C23\" />\r\n        <stop offset=\"1\" stopColor=\"#FFBC30\" />\r\n      </linearGradient>\r\n      <clipPath id=\"clip0\">\r\n        <rect width=\"303\" height=\"63\" fill=\"white\" />\r\n      </clipPath>\r\n    </defs>\r\n  </svg>\r\n)\r\nexport const FormSignupInfoWrapper = () => {\r\n  return (\r\n    <svg\r\n      width=\"749\"\r\n      height=\"657\"\r\n      viewBox=\"0 0 749 657\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <g clipPath=\"url(#clip0)\">\r\n        <path\r\n          d=\"M1.01521 34.5547C-8.20303 43.1568 49.0662 634.354 64.4541 642.515C87.3908 654.646 658.341 665.748 685.633 646.926C706.392 632.589 757.637 52.9354 747.765 39.9218C710.965 -8.75029 54.8004 -15.6614 1.01521 34.5547Z\"\r\n          fill=\"url(#paint0_linear_formsignupinfowrapper)\"\r\n        />\r\n        <path\r\n          d=\"M5.87947 34.4086C-3.04843 39.6287 51.5352 629.429 68.8103 637.002C93.9245 648.03 628.873 662.441 683.456 640.31C695.723 635.384 759.67 58.1565 742.322 41.0256C695.36 -5.36726 81.2222 -9.85216 5.87947 34.4086Z\"\r\n          fill=\"#FFC61A\"\r\n        />\r\n        <path\r\n          d=\"M9.00048 37.57C0.145165 42.7166 54.4384 626.12 71.4232 633.546C96.1745 644.354 627.058 658.397 680.916 636.781C692.965 631.929 757.202 59.4063 739.564 43.2313C694.925 2.49964 83.2545 -5.73492 9.00048 37.57Z\"\r\n          fill=\"url(#paint1_linear_formsignupinfowrapper)\"\r\n        />\r\n        <path\r\n          d=\"M18.9449 43.6726C9.87182 52.0542 62.2779 617.004 78.4642 624.062C107.353 636.781 622.413 649.06 673.73 628.547C685.271 623.915 747.476 63.0826 731.29 46.9811C689.917 5.66126 62.423 3.45558 18.9449 43.6726Z\"\r\n          fill=\"#FFC61A\"\r\n        />\r\n        <path\r\n          d=\"M22.211 48.0103C15.4606 54.4068 63.5116 572.743 79.6253 621.856C82.8916 631.782 562.167 648.398 670.246 627.37C679.391 625.606 741.161 63.4501 723.668 49.1132C683.384 15.8808 56.0354 15.8808 22.211 48.0103Z\"\r\n          fill=\"url(#paint2_linear_formsignupinfowrapper)\"\r\n        />\r\n        <path\r\n          d=\"M724.83 47.6427C684.473 14.4839 57.1969 14.4839 23.3725 46.5399C16.6221 53.0099 64.6005 571.272 80.7868 620.386C81.6579 623.106 99.7314 626.341 127.749 629.135C112.579 625.679 92.1826 620.239 87.3195 610.46C81.8756 599.432 28.9615 81.5368 38.6152 58.7447C41.8815 51.0248 575.305 17.866 711.764 57.6418C729.838 62.9355 684.545 573.993 671.407 625.973C680.626 624.135 742.322 62.0532 724.83 47.6427Z\"\r\n          fill=\"url(#paint3_linear_formsignupinfowrapper)\"\r\n        />\r\n        <path\r\n          opacity=\"0.71\"\r\n          d=\"M553.82 643.839C549.683 645.53 661.318 641.854 677.504 633.693C682.513 631.12 716.845 280.416 726.281 190.792C726.281 190.792 684.69 627.002 674.964 629.87C647.382 638.104 557.014 642.589 553.82 643.839Z\"\r\n          fill=\"#FFE58F\"\r\n        />\r\n        <path\r\n          d=\"M11.1782 94.0356C13.5009 90.2124 8.42 45.3635 12.4121 39.9963C19.9609 29.8501 57.6323 25.3653 55.0919 22.792C51.9707 19.6305 10.5975 29.409 7.11347 36.9083C3.62942 44.4812 8.05707 99.1822 11.1782 94.0356Z\"\r\n          fill=\"#FFE58F\"\r\n        />\r\n      </g>\r\n      <defs>\r\n        <linearGradient\r\n          id=\"paint0_linear_formsignupinfowrapper\"\r\n          x1=\"374.512\"\r\n          y1=\"664.802\"\r\n          x2=\"374.512\"\r\n          y2=\"15.8187\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stopColor=\"#FEB32C\" />\r\n          <stop offset=\"0.00304192\" stopColor=\"#FEB22C\" />\r\n          <stop offset=\"0.0667296\" stopColor=\"#FEA827\" />\r\n          <stop offset=\"0.1452\" stopColor=\"#FEA525\" />\r\n          <stop offset=\"1\" stopColor=\"#FEB336\" />\r\n        </linearGradient>\r\n        <linearGradient\r\n          id=\"paint1_linear_formsignupinfowrapper\"\r\n          x1=\"375.308\"\r\n          y1=\"651.805\"\r\n          x2=\"375.308\"\r\n          y2=\"29.37\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stopColor=\"#FFCB44\" />\r\n          <stop offset=\"1\" stopColor=\"#FFDE6C\" />\r\n        </linearGradient>\r\n        <linearGradient\r\n          id=\"paint2_linear_formsignupinfowrapper\"\r\n          x1=\"374.168\"\r\n          y1=\"24.0493\"\r\n          x2=\"374.168\"\r\n          y2=\"637.516\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stopColor=\"#FFB133\" />\r\n          <stop offset=\"1\" stopColor=\"#FFA927\" />\r\n        </linearGradient>\r\n        <linearGradient\r\n          id=\"paint3_linear_formsignupinfowrapper\"\r\n          x1=\"375.339\"\r\n          y1=\"19.7207\"\r\n          x2=\"375.339\"\r\n          y2=\"620.939\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stopColor=\"#FFA526\" />\r\n          <stop offset=\"1\" stopColor=\"#FFA526\" />\r\n        </linearGradient>\r\n        <clipPath id=\"clip0\">\r\n          <rect width=\"749\" height=\"657\" fill=\"white\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  )\r\n}\r\nexport const FormSignUpAccountInfoWrapper = () => {\r\n  return (\r\n    <svg\r\n      width=\"628\"\r\n      height=\"545\"\r\n      viewBox=\"0 0 628 545\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M1.89984 95.4694C-7.77927 103.598 21.8678 523.272 38.025 530.983C62.1085 542.446 554.905 552.936 583.561 535.151C605.358 521.604 636.301 112.837 625.936 100.541C587.295 54.551 58.4502 48.0207 1.89984 95.4694Z\"\r\n        fill=\"url(#paint0_linear_formSignupaccountinfowrapper)\"\r\n      />\r\n      <path\r\n        d=\"M7.00553 95.3291C-2.36872 100.331 24.4584 518.616 42.521 525.771C68.8909 536.192 523.885 549.808 581.198 528.897C594.078 524.243 638.358 117.768 620.143 101.581C570.985 57.7453 86.1151 53.5076 7.00553 95.3291Z\"\r\n        fill=\"#FFC61A\"\r\n      />\r\n      <path\r\n        d=\"M10.2829 98.3164C0.984861 103.179 27.5072 515.49 45.3411 522.506C71.3299 532.718 522.056 545.987 578.607 525.563C591.258 520.978 635.843 118.949 617.323 103.666C570.452 65.1787 88.2493 57.398 10.2829 98.3164Z\"\r\n        fill=\"url(#paint1_linear_formSignupaccountinfowrapper)\"\r\n      />\r\n      <path\r\n        d=\"M20.8004 104.082C11.2737 112.072 35.8144 506.875 52.81 513.614C83.143 525.632 517.255 537.234 571.138 517.851C583.256 513.475 625.707 122.492 608.711 107.278C565.193 68.1658 66.376 66.0817 20.8004 104.082Z\"\r\n        fill=\"#FFC61A\"\r\n      />\r\n      <path\r\n        d=\"M24.1535 108.181C17.0657 114.225 37.0336 465.053 53.953 511.46C57.3826 520.839 453.921 536.539 567.403 516.67C577.006 515.003 619 122.77 600.632 109.223C558.334 77.8222 59.7452 77.8222 24.1535 108.181Z\"\r\n        fill=\"url(#paint2_linear_formSignupaccountinfowrapper)\"\r\n      />\r\n      <path\r\n        d=\"M601.928 107.834C559.553 76.5022 60.8883 76.5022 25.3728 106.792C18.285 112.905 38.1767 463.664 55.1723 510.071C56.0869 512.641 75.064 515.698 104.482 518.338C88.5538 515.072 67.1378 509.932 62.0315 500.692C56.3155 490.271 31.2413 139.86 41.3777 118.324C44.8073 111.029 444.852 79.6978 588.133 117.282C607.11 122.284 582.417 466.234 568.622 515.35C578.301 513.614 620.219 121.45 601.928 107.834Z\"\r\n        fill=\"url(#paint3_linear_formSignupaccountinfowrapper)\"\r\n      />\r\n      <path\r\n        d=\"M416.196 525.354C368.943 525.354 164.691 523.479 121.554 520.214C101.968 518.755 56.3919 514.795 54.639 510.21C45.7982 486.034 36.5001 279.288 30.7079 223.85C27.5832 194.047 25.2206 165.703 24.0774 144.098C22.8579 120.617 23.1628 107.973 24.9919 106.375C43.4356 90.7441 294.94 83.7275 384.948 83.7275C477.166 83.7275 580.055 91.0915 602.233 107.487C611.836 114.573 604.824 181.334 599.87 220.516C592.858 275.051 582.036 475.405 574.567 502.429C570.985 515.42 569.461 515.698 568.775 515.837C523.428 523.687 460.78 525.354 416.196 525.354ZM384.948 84.7001C295.169 84.7001 43.9691 91.6472 25.754 107.209C22.6293 109.918 25.2206 161.118 31.7749 223.85C37.5671 279.219 46.8652 485.895 55.7059 510.001C56.5443 512.224 77.2744 515.976 121.707 519.38C164.844 522.645 369.02 524.521 416.272 524.521C460.781 524.521 523.352 522.854 568.623 514.934C568.851 514.864 570.299 514.1 573.576 502.29C581.045 475.335 591.868 274.981 598.879 220.516C607.339 154.241 608.406 113.322 601.623 108.39C579.597 91.9946 476.938 84.7001 384.948 84.7001Z\"\r\n        fill=\"url(#paint4_linear_formSignupaccountinfowrapper)\"\r\n      />\r\n      <path\r\n        opacity=\"0.71\"\r\n        d=\"M445.233 532.232C440.889 533.83 558.105 530.356 575.101 522.645C580.359 520.214 593.544 327.779 603.452 243.094C603.452 243.094 582.646 516.323 572.433 519.033C543.472 526.813 448.51 531.051 445.233 532.232Z\"\r\n        fill=\"#FFE58F\"\r\n      />\r\n      <path\r\n        d=\"M12.5692 151.67C15.008 148.057 9.67309 105.68 13.8648 100.609C21.791 91.0218 61.3458 86.784 58.6783 84.3526C55.4012 81.3653 11.9595 90.5355 8.30125 97.691C4.643 104.847 9.29202 156.533 12.5692 151.67Z\"\r\n        fill=\"#FFE58F\"\r\n      />\r\n      <path\r\n        d=\"M93.2073 54.8357C84.7456 66.0259 112.084 141.235 124.711 148.261C132.522 152.685 204.252 128.353 313.734 127.052C417.879 125.751 500.023 146.7 507.053 143.837C509.917 142.666 538.296 88.4064 536.994 78.3873C536.083 71.4909 527.621 60.691 522.935 57.9585C493.904 41.043 392.754 6.82168 302.278 5.65061C200.216 4.34941 100.497 45.0767 93.2073 54.8357Z\"\r\n        fill=\"#FEEAA8\"\r\n      />\r\n      <path\r\n        d=\"M93.2077 54.8357C84.7459 66.0259 112.214 136.16 124.842 143.187C132.653 147.611 203.731 124.319 313.214 123.018C417.358 121.717 495.206 141.495 502.236 138.632C505.1 137.461 536.083 86.0643 534.781 76.0451C533.87 69.1488 527.752 60.8212 522.935 57.9585C493.905 41.043 392.754 6.82168 302.278 5.65061C200.216 4.34941 100.498 45.0767 93.2077 54.8357Z\"\r\n        fill=\"url(#paint5_linear_formSignupaccountinfowrapper)\"\r\n      />\r\n      <path\r\n        d=\"M93.2073 54.8357C84.7456 66.0259 111.433 124.97 124.06 131.996C131.871 136.42 205.423 112.348 314.906 112.348C413.192 112.348 491.691 131.996 498.721 129.134C501.585 127.963 533.74 73.0524 531.006 64.5946C527.231 53.1441 407.594 7.08192 302.278 5.65061C200.216 4.34941 100.497 45.0767 93.2073 54.8357Z\"\r\n        fill=\"#F68317\"\r\n      />\r\n      <path\r\n        d=\"M128.226 144.228C126.534 144.228 125.232 143.967 124.581 143.577C114.818 138.242 97.8941 98.9461 92.6869 74.6138C90.4738 64.2042 90.4738 57.438 92.817 54.4453C99.8468 44.8165 196.701 5 297.462 5C299.154 5 300.716 5 302.408 5C352.919 5.6506 402.908 16.4505 435.974 25.2986C480.236 37.1394 510.698 50.0213 523.456 57.438C528.403 60.3007 534.651 68.8885 535.563 75.915C536.344 81.9005 526.58 100.377 520.722 110.917C514.473 122.237 504.579 138.372 502.497 139.153C501.976 139.413 501.195 139.413 499.893 139.413C495.727 139.413 486.875 138.112 474.508 136.29C442.483 131.476 388.849 123.539 322.717 123.539C319.592 123.539 316.338 123.539 313.213 123.539C243.046 124.319 189.021 134.208 156.606 140.064C143.067 142.536 133.303 144.228 128.226 144.228ZM297.462 6.30119C243.176 6.30119 193.056 17.7517 160.641 27.2504C122.108 38.5708 97.113 50.802 93.7283 55.226C91.7756 57.8284 91.7756 64.5946 93.8585 74.3535C99.3261 100.247 116.64 137.852 125.102 142.536C125.623 142.796 126.664 143.056 128.226 143.056C133.173 143.056 142.937 141.235 156.345 138.893C188.76 133.037 242.916 123.148 313.083 122.368C316.208 122.368 319.462 122.368 322.586 122.368C388.849 122.368 442.483 130.435 474.508 135.249C486.745 137.071 495.467 138.372 499.633 138.372C500.934 138.372 501.455 138.242 501.715 138.112C502.887 137.461 510.568 126.011 519.42 110.136C529.054 92.9606 534.391 80.2089 534 76.1752C533.219 69.5391 527.101 61.3416 522.544 58.6091C508.875 50.6719 476.721 37.79 435.453 26.7299C402.518 17.8818 352.528 7.21203 302.278 6.56143C300.716 6.30119 299.024 6.30119 297.462 6.30119Z\"\r\n        fill=\"url(#paint6_linear_formSignupaccountinfowrapper)\"\r\n      />\r\n      <path\r\n        opacity=\"0.5\"\r\n        d=\"M527.361 78.5174C530.095 72.0114 531.657 66.8066 531.006 64.5946C527.231 53.1441 407.594 7.08192 302.278 5.65061C200.216 4.34941 100.498 45.0767 93.2074 54.8357C86.0475 64.3344 104.012 107.924 117.421 125.36C173.659 82.0306 329.876 18.9228 527.361 78.5174Z\"\r\n        fill=\"#F89A36\"\r\n      />\r\n      <path\r\n        opacity=\"0.71\"\r\n        d=\"M108.969 91.1679C109.856 96.141 99.8437 68.1109 101.111 58.9558C101.872 53.3046 187.551 15.5543 293.635 14.7631C399.72 14.0849 505.805 53.3046 520 63.1378C487.807 45.7319 376.146 19.058 288.946 19.7362C207.956 20.4143 124.685 47.7664 108.209 59.634C101.872 64.268 108.209 86.986 108.969 91.1679Z\"\r\n        fill=\"#FFE58F\"\r\n      />\r\n      <path\r\n        d=\"M203.08 32.3252C202.69 29.4626 202.43 26.7301 202.039 23.8675C201.909 22.9566 202.169 22.1759 202.82 21.3952C203.471 20.7446 204.252 20.2241 205.294 20.2241C208.288 19.8338 211.412 19.5735 214.406 19.1832C219.483 18.6627 223.779 19.5735 227.294 22.0458C230.679 24.5181 232.632 27.9012 233.022 32.065C233.022 32.065 233.022 32.065 233.022 32.1951C233.413 36.3589 232.111 40.0022 229.247 42.995C226.253 46.1178 222.477 47.9395 217.531 48.46C214.667 48.7202 211.672 49.1106 208.808 49.5009C207.897 49.6311 206.986 49.3708 206.205 48.8503C205.424 48.3299 205.033 47.5492 204.903 46.6383C204.512 43.7757 204.122 40.9131 203.862 38.0505C203.601 38.0505 203.471 38.0505 203.211 38.1806C202.299 38.3107 201.648 38.0505 200.867 37.6601C200.216 37.1396 199.826 36.6191 199.696 35.7083C199.566 34.9276 199.826 34.1469 200.347 33.6264C200.867 32.9758 201.518 32.5854 202.43 32.4553C202.69 32.4553 202.82 32.4553 203.08 32.3252ZM209.98 31.5445C211.412 31.4144 212.714 31.2843 214.146 31.024C215.057 30.8939 215.838 31.1541 216.489 31.6746C217.14 32.1951 217.531 32.8457 217.661 33.6264C217.791 34.4071 217.531 35.1878 217.01 35.7083C216.489 36.3589 215.838 36.7493 214.927 36.7493C213.625 36.8794 212.193 37.0095 210.891 37.2697C211.152 39.3516 211.412 41.3034 211.542 43.3853C213.365 43.1251 215.187 42.995 217.01 42.7347C219.874 42.4745 222.087 41.4336 223.649 39.6119C225.211 37.7902 225.862 35.5782 225.602 32.9758C225.602 32.9758 225.602 32.9758 225.602 32.8457C225.341 30.2433 224.3 28.1614 222.347 26.7301C220.395 25.2988 217.921 24.6482 215.057 25.0385C213.235 25.2988 211.282 25.4289 209.459 25.6891C209.59 27.6409 209.85 29.5927 209.98 31.5445Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M236.928 42.4744C239.922 34.407 243.046 26.4697 246.301 18.5325C246.952 16.7108 248.384 15.8 250.336 15.6698C250.466 15.6698 250.597 15.6698 250.727 15.6698C252.68 15.5397 254.112 16.3204 255.023 18.012C259.319 25.4288 263.354 32.9757 267.39 40.5226C267.65 41.0431 267.781 41.4334 267.781 41.8238C267.781 42.7346 267.52 43.3852 266.999 44.0358C266.349 44.6864 265.698 45.0768 264.656 45.0768C263.094 45.2069 261.922 44.4262 261.271 42.9949C260.49 41.4334 259.709 40.0021 258.928 38.4407C254.242 38.7009 249.685 38.9612 244.999 39.3515C244.348 41.0431 243.827 42.7346 243.176 44.2961C242.656 45.7274 241.614 46.378 240.182 46.5081C239.271 46.6382 238.49 46.378 237.839 45.8575C237.188 45.337 236.797 44.6864 236.667 43.7756C236.537 43.5154 236.667 42.9949 236.928 42.4744ZM242.135 10.3349C241.875 9.94459 241.744 9.55423 241.744 9.16388C241.744 8.51328 241.875 7.9928 242.395 7.60245C242.786 7.21209 243.437 6.95185 244.088 6.82173C244.999 6.82173 245.65 7.08197 246.301 7.73257C247.212 8.77352 248.384 9.294 250.076 9.16388C251.768 9.03376 252.81 8.38316 253.591 7.21209C254.112 6.43137 254.762 6.04102 255.674 6.04102C256.325 6.04102 256.976 6.17113 257.496 6.56149C258.017 6.95185 258.277 7.47233 258.277 8.12292C258.277 8.51328 258.277 8.90364 258.017 9.294C256.585 11.7663 254.112 13.0675 250.466 13.3277C246.561 13.5879 243.827 12.6771 242.135 10.3349ZM255.934 32.8456C254.242 29.7227 252.549 26.5999 250.857 23.477C249.555 26.8601 248.253 30.1131 247.082 33.4962C250.076 33.2359 252.94 32.9757 255.934 32.8456Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M272.337 18.012C272.337 17.1011 272.597 16.3204 273.248 15.6698C273.899 15.0192 274.81 14.6289 275.722 14.6289C275.982 14.6289 276.242 14.6289 276.503 14.6289C277.935 14.6289 279.236 15.1494 280.278 16.4505C285.095 21.7854 289.781 27.1203 294.337 32.5853C294.207 27.5107 294.207 22.436 294.077 17.3614C294.077 16.4505 294.337 15.6698 295.119 15.0192C295.769 14.3686 296.681 14.1084 297.592 14.1084C298.633 14.1084 299.415 14.3686 300.065 15.0192C300.716 15.6698 301.107 16.4505 301.107 17.2313C301.107 25.0384 301.237 32.8456 301.237 40.6527C301.237 41.5636 300.977 42.3443 300.196 42.9949C299.545 43.6455 298.633 43.9057 297.722 43.9057C297.592 43.9057 297.592 43.9057 297.462 43.9057C296.16 43.9057 294.858 43.2551 293.817 42.084C289.13 36.4889 284.314 30.8938 279.367 25.4288C279.497 30.6335 279.757 35.9684 279.887 41.1732C279.887 42.084 279.627 42.8647 278.976 43.5153C278.325 44.1659 277.544 44.4262 276.633 44.5563C275.722 44.5563 274.81 44.2961 274.159 43.7756C273.509 43.125 273.118 42.4744 273.118 41.5636C272.988 33.6263 272.597 25.8191 272.337 18.012Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M311.001 39.8718C308.007 37.0092 306.444 33.3659 306.444 29.0719C306.444 29.0719 306.444 29.0719 306.444 28.9418C306.444 24.6479 308.007 21.1347 311.261 18.1419C314.516 15.1492 318.681 13.7179 323.498 13.848C327.924 13.9781 331.569 15.019 334.563 16.9708C335.475 17.6214 335.995 18.5323 335.995 19.5732C335.995 20.4841 335.605 21.2648 334.954 21.7853C334.303 22.4358 333.392 22.6961 332.481 22.566C331.699 22.566 331.049 22.3057 330.267 21.7853C328.185 20.3539 325.841 19.7033 323.238 19.5732C320.634 19.5732 318.421 20.3539 316.598 22.1756C314.776 23.9973 313.865 26.0792 313.865 28.6816C313.865 28.6816 313.865 28.6816 313.865 28.8117C313.865 31.5442 314.776 33.7562 316.468 35.5779C318.161 37.3996 320.504 38.3104 323.368 38.3104C325.971 38.3104 328.185 37.7899 330.007 36.749C330.007 35.3177 330.137 33.8863 330.137 32.5851C328.575 32.5851 327.013 32.455 325.451 32.455C324.539 32.455 323.889 32.1948 323.368 31.6743C322.847 31.1538 322.457 30.5032 322.457 29.7225C322.457 28.9418 322.847 28.2912 323.368 27.7707C324.019 27.2503 324.67 26.99 325.581 26.99C328.315 26.99 330.918 27.1201 333.652 27.2503C334.563 27.2503 335.475 27.6406 336.126 28.2912C336.777 28.9418 337.037 29.7225 337.037 30.6334C336.907 32.9755 336.907 35.4478 336.777 37.7899C336.646 39.6116 335.865 41.0429 334.173 41.8236C330.658 43.6453 327.013 44.5561 323.108 44.426C318.161 44.1658 314.125 42.7344 311.001 39.8718Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M358.256 18.7925C358.256 17.8817 358.647 17.101 359.428 16.5805C360.209 15.9299 361.12 15.7998 362.031 15.7998C362.943 15.7998 363.854 16.1902 364.505 16.8408C365.156 17.4914 365.416 18.2721 365.416 19.1829C365.156 22.4359 364.895 25.819 364.765 29.072C369.322 25.4286 374.008 21.7853 378.825 18.2721C379.866 17.4914 380.908 17.2311 381.949 17.2311C382.991 17.3612 383.642 17.6215 384.292 18.2721C384.813 18.9227 385.074 19.7034 384.943 20.4841C384.813 21.3949 384.423 22.1756 383.381 22.8262C380.127 25.1684 376.872 27.3804 373.618 29.7226C376.612 33.7563 379.476 37.7899 382.47 41.8236C382.991 42.6044 383.251 43.3851 383.251 44.1658C383.121 45.0766 382.73 45.7272 382.079 46.3778C381.298 46.8983 380.517 47.1585 379.476 47.0284C378.434 46.8983 377.523 46.3778 376.742 45.2067C374.008 41.3032 371.274 37.3996 368.541 33.496C367.109 34.537 365.677 35.5779 364.245 36.6189C364.114 38.5707 363.984 40.5225 363.854 42.4742C363.854 43.3851 363.463 44.1658 362.682 44.6863C361.901 45.2067 361.12 45.467 360.209 45.467C359.298 45.467 358.386 45.0766 357.735 44.426C357.085 43.7754 356.824 42.9947 356.954 42.0839C357.215 34.4069 357.736 26.5997 358.256 18.7925Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M397.311 37.2696C394.316 32.5854 391.322 28.0312 388.328 23.3469C387.807 22.5662 387.547 21.7855 387.677 21.0047C387.807 20.0939 388.198 19.4433 388.849 18.9228C389.63 18.4024 390.541 18.1421 391.452 18.2722C392.754 18.4024 393.926 19.1831 394.837 20.6144C397.05 24.2577 399.394 28.0312 401.476 31.6745C404.471 28.5517 407.595 25.4288 410.719 22.3059C411.891 21.1349 413.062 20.6144 414.364 20.8746C415.406 21.0047 416.187 21.3951 416.838 22.1758C417.358 22.8264 417.619 23.6071 417.489 24.518C417.358 25.1686 416.968 25.9493 416.317 26.5999C412.281 30.3733 408.376 34.1468 404.34 38.0504C403.95 40.913 403.689 43.6455 403.299 46.5081C403.169 47.4189 402.778 48.1997 401.997 48.7201C401.216 49.2406 400.305 49.5009 399.393 49.3707C398.482 49.2406 397.571 48.8503 397.05 48.1997C396.399 47.5491 396.269 46.6382 396.269 45.7274C396.79 42.8648 397.05 40.0022 397.311 37.2696ZM401.346 16.3205C401.346 16.0602 401.607 15.6699 401.997 15.2795C403.039 14.2386 403.95 13.0675 404.991 12.0265C405.772 11.1157 406.684 10.7253 407.855 10.8555C408.767 10.9856 409.548 11.2458 410.459 11.7663C411.24 12.2868 411.761 12.8072 411.631 13.3277C411.631 13.8482 411.24 14.2386 410.459 14.759C409.417 15.4096 408.376 16.1903 407.335 16.8409C406.163 17.6216 404.731 17.8819 403.169 17.7518C401.737 17.4915 401.216 17.1012 401.346 16.3205Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M191.755 79.0378C189.672 79.2981 187.459 79.6884 185.376 79.9487C184.595 80.0788 183.814 79.9487 183.033 79.4282C182.382 78.9077 181.861 78.2571 181.861 77.4764C181.731 76.6957 181.991 75.915 182.382 75.2644C182.902 74.6138 183.553 74.2234 184.465 74.0933C190.974 73.0523 197.483 72.1415 203.992 71.3608C204.773 71.2307 205.554 71.4909 206.335 72.0114C206.986 72.5319 207.376 73.1825 207.507 73.9632C207.637 74.7439 207.376 75.5246 206.856 76.1752C206.335 76.8258 205.684 77.2162 204.773 77.3463C202.69 77.6065 200.477 77.8668 198.394 78.2571C199.305 85.0233 200.217 91.7895 201.128 98.5557C201.258 99.4665 200.998 100.247 200.477 101.028C199.956 101.679 199.175 102.199 198.264 102.329C197.353 102.459 196.571 102.329 195.79 101.679C195.009 101.158 194.619 100.377 194.489 99.4666C193.707 92.4401 192.666 85.804 191.755 79.0378Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M210.11 95.9532C212.584 87.8858 215.187 79.8184 217.791 71.751C218.442 69.9293 219.613 69.0185 221.436 68.7582C221.566 68.7582 221.696 68.7582 221.827 68.7582C223.649 68.6281 224.951 69.2787 225.992 70.9703C230.288 78.2569 234.584 85.6737 238.62 93.0905C238.88 93.611 239.01 94.0014 239.01 94.3917C239.141 95.3026 238.88 95.9532 238.36 96.6038C237.839 97.2543 237.188 97.6447 236.277 97.7748C234.845 97.9049 233.673 97.2544 232.892 95.823C232.111 94.3917 231.33 92.8303 230.419 91.399C226.123 91.7893 221.696 92.3098 217.4 92.8303C216.88 94.5219 216.359 96.2134 215.838 97.9049C215.448 99.3363 214.536 100.117 213.104 100.247C212.323 100.377 211.542 100.117 210.891 99.5965C210.24 99.076 209.85 98.4254 209.72 97.5146C209.85 96.9941 209.98 96.4736 210.11 95.9532ZM217.661 65.7655C216.619 65.1149 215.708 64.3342 214.667 63.6836C214.016 63.2932 213.625 62.7728 213.625 62.2523C213.625 61.7318 214.016 61.3415 214.797 60.821C215.578 60.3005 216.359 60.0403 217.14 59.9101C218.181 59.78 219.093 60.1704 219.874 61.0812C220.785 62.2523 221.696 63.2932 222.738 64.4643C223.128 64.8547 223.259 65.245 223.259 65.5053C223.389 66.1559 222.738 66.6763 221.696 66.8065C220.134 66.8065 218.832 66.5462 217.661 65.7655ZM227.685 85.8039C225.992 82.681 224.3 79.6883 222.477 76.5654C221.436 79.9485 220.395 83.3316 219.353 86.7147C222.087 86.3243 224.821 86.0641 227.685 85.8039Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M242.785 70.1898C242.655 69.279 242.916 68.4982 243.567 67.8476C244.217 67.197 244.999 66.8067 245.91 66.6766C246.821 66.5465 247.732 66.8067 248.383 67.4573C249.034 67.9778 249.425 68.7585 249.555 69.6693C250.076 77.4765 250.727 85.2836 251.247 93.0908C251.247 94.0016 251.117 94.7823 250.466 95.4329C249.815 96.0835 249.164 96.4739 248.253 96.4739C247.342 96.604 246.561 96.3438 245.91 95.6932C245.259 95.1727 244.868 94.392 244.738 93.4811C243.957 85.8041 243.306 77.9969 242.785 70.1898Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M270.124 68.498C270.124 67.5872 270.384 66.8065 271.035 66.1559C271.686 65.5053 272.467 65.115 273.378 65.115C274.289 65.115 275.201 65.3752 275.851 65.8957C276.502 66.5463 276.893 67.327 276.893 68.1077C277.023 71.3607 277.153 74.7438 277.283 77.9968C281.189 73.8329 285.225 69.7992 289.26 65.7655C290.171 64.8547 291.083 64.4644 292.124 64.4644C293.035 64.4644 293.816 64.7246 294.467 65.2451C294.988 65.7655 295.379 66.5463 295.379 67.327C295.379 68.2378 294.988 69.0185 294.207 69.7992C291.343 72.4016 288.609 75.004 285.875 77.7365C289.13 81.3799 292.254 85.1533 295.248 88.9268C295.899 89.5774 296.16 90.3581 296.16 91.1388C296.16 92.0496 295.899 92.8303 295.248 93.4809C294.598 94.1315 293.816 94.3918 292.905 94.3918C291.864 94.3918 290.952 93.8713 290.171 92.8303C287.307 89.187 284.313 85.6738 281.319 82.0304C280.147 83.2015 278.846 84.3726 277.674 85.5437C277.804 87.4955 277.804 89.4472 277.934 91.399C277.934 92.3099 277.674 93.0906 277.153 93.7412C276.502 94.3918 275.721 94.7821 274.81 94.7821C273.899 94.7821 273.118 94.5219 272.467 94.0014C271.816 93.3508 271.425 92.5701 271.425 91.7894C270.905 84.1124 270.514 76.3052 270.124 68.498Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M301.237 67.7173C301.237 66.8065 301.497 66.0258 302.148 65.3752C302.799 64.7246 303.58 64.4644 304.622 64.4644C305.533 64.4644 306.314 64.7246 307.095 65.3752C307.746 66.0258 308.006 66.8065 308.006 67.7173C308.006 70.58 308.006 73.4426 308.006 76.4353C312.042 76.4353 316.208 76.4353 320.243 76.5654C320.243 73.7028 320.373 70.8402 320.373 67.8475C320.373 66.9366 320.764 66.1559 321.415 65.5053C322.066 64.8547 322.977 64.5945 323.888 64.5945C324.8 64.5945 325.581 64.9848 326.232 65.6354C326.882 66.286 327.143 67.0667 327.143 67.9776C326.882 75.7847 326.752 83.5919 326.492 91.399C326.492 92.3099 326.101 93.0906 325.45 93.7412C324.8 94.3918 324.019 94.652 323.107 94.652C322.196 94.652 321.415 94.2617 320.764 93.7412C320.113 93.0906 319.853 92.3099 319.853 91.399C319.853 88.4063 319.983 85.5437 319.983 82.5509C315.947 82.4208 311.912 82.4208 307.746 82.4208C307.746 85.4136 307.746 88.2762 307.746 91.2689C307.746 92.1798 307.486 92.9605 306.835 93.6111C306.184 94.2617 305.403 94.5219 304.491 94.5219C303.58 94.5219 302.799 94.2617 302.148 93.6111C301.497 92.9605 301.237 92.1798 301.237 91.2689C301.367 83.3316 301.367 75.5245 301.237 67.7173Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M335.735 90.7488C332.871 87.756 331.439 84.1127 331.569 79.8188C331.569 79.8188 331.569 79.8188 331.569 79.6887C331.699 75.3947 333.392 71.8815 336.516 69.149C339.771 66.2864 343.676 64.9852 348.363 65.2454C353.049 65.5057 356.824 67.1972 359.818 70.3201C362.682 73.4429 363.854 77.0863 363.594 81.3802C363.594 81.3802 363.594 81.3802 363.594 81.5103C363.333 85.8043 361.511 89.1874 358.386 91.9199C355.132 94.6524 351.357 95.9536 346.8 95.6933C342.244 95.4331 338.729 93.8716 335.735 90.7488ZM353.83 87.3657C355.653 85.8043 356.564 83.5922 356.694 81.12C356.694 81.12 356.694 81.12 356.694 80.9898C356.824 78.3875 356.173 76.1754 354.611 74.3538C352.919 72.402 350.836 71.361 348.102 71.2309C345.499 71.1008 343.155 71.8815 341.463 73.5731C339.64 75.2646 338.729 77.3465 338.599 79.9489C338.599 79.9489 338.599 79.9489 338.599 80.079C338.469 82.6814 339.25 84.8934 340.942 86.7151C342.504 88.5368 344.717 89.5777 347.321 89.7078C349.794 89.838 352.008 89.1874 353.83 87.3657Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M366.978 92.3099C371.014 84.8931 375.18 77.4763 379.476 70.0595C380.387 68.368 381.819 67.7174 383.641 67.8475C383.772 67.8475 383.902 67.8475 384.032 67.8475C385.855 67.9776 387.026 69.0186 387.677 70.8402C390.411 78.9076 393.014 86.975 395.618 95.0424C395.748 95.5629 395.878 95.9533 395.748 96.3436C395.618 97.2544 395.228 97.905 394.577 98.4255C393.926 98.946 393.145 99.2062 392.233 99.0761C390.801 98.946 389.89 98.0352 389.369 96.4737C388.849 94.9123 388.328 93.2207 387.937 91.6593C383.641 91.1388 379.215 90.7485 374.919 90.3581C374.138 91.9196 373.227 93.481 372.446 95.0424C371.795 96.3436 370.623 96.8641 369.321 96.8641C368.54 96.734 367.759 96.4737 367.239 95.8231C366.718 95.1725 366.458 94.3918 366.458 93.6111C366.588 93.3509 366.718 92.8304 366.978 92.3099ZM383.511 66.5463C382.6 66.4162 382.079 65.8957 382.079 65.115C382.079 64.7246 382.079 64.3343 382.079 63.9439C381.949 62.903 382.47 62.3825 383.641 62.3825C384.813 62.3825 385.334 62.1223 385.334 61.7319C385.334 61.3415 385.073 61.0813 384.422 61.0813C383.902 61.0813 383.251 61.0813 382.73 61.4717C382.34 61.7319 381.949 61.862 381.559 61.7319C381.038 61.7319 380.647 61.4717 380.257 61.0813C379.996 60.6909 379.736 60.1705 379.866 59.7801C379.866 59.2596 380.127 58.7392 380.647 58.4789C381.819 57.6982 383.251 57.3078 384.813 57.5681C386.245 57.6982 387.417 58.2187 388.198 58.9994C389.109 59.9102 389.369 60.9512 389.239 62.2524C388.979 64.3343 387.677 65.5054 385.334 65.7656V65.6355C385.073 66.5463 384.553 66.9367 383.641 66.8065C383.641 66.5463 383.641 66.5463 383.511 66.5463ZM386.245 85.9341C385.204 82.551 384.162 79.1679 382.991 75.9149C381.298 79.0378 379.606 82.0305 377.913 85.1534C380.647 85.2835 383.381 85.6738 386.245 85.9341Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M403.82 73.7029C403.95 72.7921 404.341 72.0114 405.122 71.4909C405.903 70.9704 406.684 70.7102 407.595 70.8403C407.855 70.8403 408.116 70.8403 408.246 70.9704C409.548 71.1005 410.589 71.8812 411.5 73.3125C415.146 79.298 418.53 85.2835 421.915 91.3991C422.696 86.4546 423.477 81.3799 424.128 76.4354C424.258 75.5246 424.649 74.874 425.43 74.3535C426.211 73.833 426.992 73.7029 427.903 73.833C428.815 73.9631 429.596 74.3535 430.116 75.1342C430.637 75.9149 430.897 76.6957 430.767 77.4764C429.596 85.1534 428.294 92.9606 427.122 100.638C426.992 101.548 426.601 102.199 425.82 102.719C425.039 103.24 424.258 103.37 423.347 103.24C423.217 103.24 423.217 103.24 423.087 103.24C421.785 103.11 420.743 102.199 419.962 100.898C416.447 94.6521 412.932 88.4064 409.287 82.2908C408.637 87.4955 407.855 92.7003 407.205 97.9051C407.074 98.8159 406.684 99.4665 406.033 99.987C405.382 100.507 404.471 100.768 403.69 100.638C402.778 100.507 402.127 100.117 401.477 99.4665C400.956 98.8159 400.695 98.0352 400.826 97.1244C401.867 89.3172 402.909 81.5101 403.82 73.7029Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M203.08 32.3252C202.69 29.4626 202.43 26.7301 202.039 23.8675C201.909 22.9566 202.169 22.1759 202.82 21.3952C203.471 20.7446 204.252 20.2241 205.294 20.2241C208.288 19.8338 211.412 19.5735 214.406 19.1832C219.483 18.6627 223.779 19.5735 227.294 22.0458C230.679 24.5181 232.632 27.9012 233.022 32.065C233.022 32.065 233.022 32.065 233.022 32.1951C233.413 36.3589 232.111 40.0022 229.247 42.995C226.253 46.1178 222.477 47.9395 217.531 48.46C214.667 48.7202 211.672 49.1106 208.808 49.5009C207.897 49.6311 206.986 49.3708 206.205 48.8503C205.424 48.3299 205.033 47.5492 204.903 46.6383C204.512 43.7757 204.122 40.9131 203.862 38.0505C203.601 38.0505 203.471 38.0505 203.211 38.1806C202.299 38.3107 201.648 38.0505 200.867 37.6601C200.216 37.1396 199.826 36.6191 199.696 35.7083C199.566 34.9276 199.826 34.1469 200.347 33.6264C200.867 32.9758 201.518 32.5854 202.43 32.4553C202.69 32.4553 202.82 32.4553 203.08 32.3252ZM209.98 31.5445C211.412 31.4144 212.714 31.2843 214.146 31.024C215.057 30.8939 215.838 31.1541 216.489 31.6746C217.14 32.1951 217.531 32.8457 217.661 33.6264C217.791 34.4071 217.531 35.1878 217.01 35.7083C216.489 36.3589 215.838 36.7493 214.927 36.7493C213.625 36.8794 212.193 37.0095 210.891 37.2697C211.152 39.3516 211.412 41.3034 211.542 43.3853C213.365 43.1251 215.187 42.995 217.01 42.7347C219.874 42.4745 222.087 41.4336 223.649 39.6119C225.211 37.7902 225.862 35.5782 225.602 32.9758C225.602 32.9758 225.602 32.9758 225.602 32.8457C225.341 30.2433 224.3 28.1614 222.347 26.7301C220.395 25.2988 217.921 24.6482 215.057 25.0385C213.235 25.2988 211.282 25.4289 209.459 25.6891C209.59 27.6409 209.85 29.5927 209.98 31.5445Z\"\r\n        stroke=\"#F68317\"\r\n        strokeWidth=\"11.3161\"\r\n      />\r\n      <path\r\n        d=\"M236.928 42.4744C239.922 34.407 243.046 26.4697 246.301 18.5325C246.952 16.7108 248.384 15.8 250.336 15.6698C250.466 15.6698 250.597 15.6698 250.727 15.6698C252.68 15.5397 254.112 16.3204 255.023 18.012C259.319 25.4288 263.354 32.9757 267.39 40.5226C267.65 41.0431 267.781 41.4334 267.781 41.8238C267.781 42.7346 267.52 43.3852 266.999 44.0358C266.349 44.6864 265.698 45.0768 264.656 45.0768C263.094 45.2069 261.922 44.4262 261.271 42.9949C260.49 41.4334 259.709 40.0021 258.928 38.4407C254.242 38.7009 249.685 38.9612 244.999 39.3515C244.348 41.0431 243.827 42.7346 243.176 44.2961C242.656 45.7274 241.614 46.378 240.182 46.5081C239.271 46.6382 238.49 46.378 237.839 45.8575C237.188 45.337 236.797 44.6864 236.667 43.7756C236.537 43.5154 236.667 42.9949 236.928 42.4744ZM242.135 10.3349C241.875 9.94459 241.744 9.55423 241.744 9.16388C241.744 8.51328 241.875 7.9928 242.395 7.60245C242.786 7.21209 243.437 6.95185 244.088 6.82173C244.999 6.82173 245.65 7.08197 246.301 7.73257C247.212 8.77352 248.384 9.294 250.076 9.16388C251.768 9.03376 252.81 8.38316 253.591 7.21209C254.112 6.43137 254.762 6.04102 255.674 6.04102C256.325 6.04102 256.976 6.17113 257.496 6.56149C258.017 6.95185 258.277 7.47233 258.277 8.12292C258.277 8.51328 258.277 8.90364 258.017 9.294C256.585 11.7663 254.112 13.0675 250.466 13.3277C246.561 13.5879 243.827 12.6771 242.135 10.3349ZM255.934 32.8456C254.242 29.7227 252.549 26.5999 250.857 23.477C249.555 26.8601 248.253 30.1131 247.082 33.4962C250.076 33.2359 252.94 32.9757 255.934 32.8456Z\"\r\n        stroke=\"#F68317\"\r\n        strokeWidth=\"11.3161\"\r\n      />\r\n      <path\r\n        d=\"M272.337 18.012C272.337 17.1011 272.597 16.3204 273.248 15.6698C273.899 15.0192 274.81 14.6289 275.722 14.6289C275.982 14.6289 276.242 14.6289 276.503 14.6289C277.935 14.6289 279.236 15.1494 280.278 16.4505C285.095 21.7854 289.781 27.1203 294.337 32.5853C294.207 27.5107 294.207 22.436 294.077 17.3614C294.077 16.4505 294.337 15.6698 295.119 15.0192C295.769 14.3686 296.681 14.1084 297.592 14.1084C298.633 14.1084 299.415 14.3686 300.065 15.0192C300.716 15.6698 301.107 16.4505 301.107 17.2313C301.107 25.0384 301.237 32.8456 301.237 40.6527C301.237 41.5636 300.977 42.3443 300.196 42.9949C299.545 43.6455 298.633 43.9057 297.722 43.9057C297.592 43.9057 297.592 43.9057 297.462 43.9057C296.16 43.9057 294.858 43.2551 293.817 42.084C289.13 36.4889 284.314 30.8938 279.367 25.4288C279.497 30.6335 279.757 35.9684 279.887 41.1732C279.887 42.084 279.627 42.8647 278.976 43.5153C278.325 44.1659 277.544 44.4262 276.633 44.5563C275.722 44.5563 274.81 44.2961 274.159 43.7756C273.509 43.125 273.118 42.4744 273.118 41.5636C272.988 33.6263 272.597 25.8191 272.337 18.012Z\"\r\n        stroke=\"#F68317\"\r\n        strokeWidth=\"11.3161\"\r\n      />\r\n      <path\r\n        d=\"M311.001 39.8718C308.007 37.0092 306.444 33.3659 306.444 29.0719C306.444 29.0719 306.444 29.0719 306.444 28.9418C306.444 24.6479 308.007 21.1347 311.261 18.1419C314.516 15.1492 318.681 13.7179 323.498 13.848C327.924 13.9781 331.569 15.019 334.563 16.9708C335.475 17.6214 335.995 18.5323 335.995 19.5732C335.995 20.4841 335.605 21.2648 334.954 21.7853C334.303 22.4358 333.392 22.6961 332.481 22.566C331.699 22.566 331.049 22.3057 330.267 21.7853C328.185 20.3539 325.841 19.7033 323.238 19.5732C320.634 19.5732 318.421 20.3539 316.598 22.1756C314.776 23.9973 313.865 26.0792 313.865 28.6816C313.865 28.6816 313.865 28.6816 313.865 28.8117C313.865 31.5442 314.776 33.7562 316.468 35.5779C318.161 37.3996 320.504 38.3104 323.368 38.3104C325.971 38.3104 328.185 37.7899 330.007 36.749C330.007 35.3177 330.137 33.8863 330.137 32.5851C328.575 32.5851 327.013 32.455 325.451 32.455C324.539 32.455 323.889 32.1948 323.368 31.6743C322.847 31.1538 322.457 30.5032 322.457 29.7225C322.457 28.9418 322.847 28.2912 323.368 27.7707C324.019 27.2503 324.67 26.99 325.581 26.99C328.315 26.99 330.918 27.1201 333.652 27.2503C334.563 27.2503 335.475 27.6406 336.126 28.2912C336.777 28.9418 337.037 29.7225 337.037 30.6334C336.907 32.9755 336.907 35.4478 336.777 37.7899C336.646 39.6116 335.865 41.0429 334.173 41.8236C330.658 43.6453 327.013 44.5561 323.108 44.426C318.161 44.1658 314.125 42.7344 311.001 39.8718Z\"\r\n        stroke=\"#F68317\"\r\n        strokeWidth=\"11.3161\"\r\n      />\r\n      <path\r\n        d=\"M358.256 18.7925C358.256 17.8817 358.647 17.101 359.428 16.5805C360.209 15.9299 361.12 15.7998 362.031 15.7998C362.943 15.7998 363.854 16.1902 364.505 16.8408C365.156 17.4914 365.416 18.2721 365.416 19.1829C365.156 22.4359 364.895 25.819 364.765 29.072C369.322 25.4286 374.008 21.7853 378.825 18.2721C379.866 17.4914 380.908 17.2311 381.949 17.2311C382.991 17.3612 383.642 17.6215 384.292 18.2721C384.813 18.9227 385.074 19.7034 384.943 20.4841C384.813 21.3949 384.423 22.1756 383.381 22.8262C380.127 25.1684 376.872 27.3804 373.618 29.7226C376.612 33.7563 379.476 37.7899 382.47 41.8236C382.991 42.6044 383.251 43.3851 383.251 44.1658C383.121 45.0766 382.73 45.7272 382.079 46.3778C381.298 46.8983 380.517 47.1585 379.476 47.0284C378.434 46.8983 377.523 46.3778 376.742 45.2067C374.008 41.3032 371.274 37.3996 368.541 33.496C367.109 34.537 365.677 35.5779 364.245 36.6189C364.114 38.5707 363.984 40.5225 363.854 42.4742C363.854 43.3851 363.463 44.1658 362.682 44.6863C361.901 45.2067 361.12 45.467 360.209 45.467C359.298 45.467 358.386 45.0766 357.735 44.426C357.085 43.7754 356.824 42.9947 356.954 42.0839C357.215 34.4069 357.736 26.5997 358.256 18.7925Z\"\r\n        stroke=\"#F68317\"\r\n        strokeWidth=\"11.3161\"\r\n      />\r\n      <path\r\n        d=\"M397.311 37.2696C394.316 32.5854 391.322 28.0312 388.328 23.3469C387.807 22.5662 387.547 21.7855 387.677 21.0047C387.807 20.0939 388.198 19.4433 388.849 18.9228C389.63 18.4024 390.541 18.1421 391.452 18.2722C392.754 18.4024 393.926 19.1831 394.837 20.6144C397.05 24.2577 399.394 28.0312 401.476 31.6745C404.471 28.5517 407.595 25.4288 410.719 22.3059C411.891 21.1349 413.062 20.6144 414.364 20.8746C415.406 21.0047 416.187 21.3951 416.838 22.1758C417.358 22.8264 417.619 23.6071 417.489 24.518C417.358 25.1686 416.968 25.9493 416.317 26.5999C412.281 30.3733 408.376 34.1468 404.34 38.0504C403.95 40.913 403.689 43.6455 403.299 46.5081C403.169 47.4189 402.778 48.1997 401.997 48.7201C401.216 49.2406 400.305 49.5009 399.393 49.3707C398.482 49.2406 397.571 48.8503 397.05 48.1997C396.399 47.5491 396.269 46.6382 396.269 45.7274C396.79 42.8648 397.05 40.0022 397.311 37.2696ZM401.346 16.3205C401.346 16.0602 401.607 15.6699 401.997 15.2795C403.039 14.2386 403.95 13.0675 404.991 12.0265C405.772 11.1157 406.684 10.7253 407.855 10.8555C408.767 10.9856 409.548 11.2458 410.459 11.7663C411.24 12.2868 411.761 12.8072 411.631 13.3277C411.631 13.8482 411.24 14.2386 410.459 14.759C409.417 15.4096 408.376 16.1903 407.335 16.8409C406.163 17.6216 404.731 17.8819 403.169 17.7518C401.737 17.4915 401.216 17.1012 401.346 16.3205Z\"\r\n        stroke=\"#F68317\"\r\n        strokeWidth=\"11.3161\"\r\n      />\r\n      <path\r\n        d=\"M191.755 79.0378C189.672 79.2981 187.459 79.6884 185.376 79.9487C184.595 80.0788 183.814 79.9487 183.033 79.4282C182.382 78.9077 181.861 78.2571 181.861 77.4764C181.731 76.6957 181.991 75.915 182.382 75.2644C182.902 74.6138 183.553 74.2234 184.465 74.0933C190.974 73.0523 197.483 72.1415 203.992 71.3608C204.773 71.2307 205.554 71.4909 206.335 72.0114C206.986 72.5319 207.376 73.1825 207.507 73.9632C207.637 74.7439 207.376 75.5246 206.856 76.1752C206.335 76.8258 205.684 77.2162 204.773 77.3463C202.69 77.6065 200.477 77.8668 198.394 78.2571C199.305 85.0233 200.217 91.7895 201.128 98.5557C201.258 99.4665 200.998 100.247 200.477 101.028C199.956 101.679 199.175 102.199 198.264 102.329C197.353 102.459 196.571 102.329 195.79 101.679C195.009 101.158 194.619 100.377 194.489 99.4666C193.707 92.4401 192.666 85.804 191.755 79.0378Z\"\r\n        stroke=\"#F68317\"\r\n        strokeWidth=\"11.3161\"\r\n      />\r\n      <path\r\n        d=\"M210.11 95.9532C212.584 87.8858 215.187 79.8184 217.791 71.751C218.442 69.9293 219.613 69.0185 221.436 68.7582C221.566 68.7582 221.696 68.7582 221.827 68.7582C223.649 68.6281 224.951 69.2787 225.992 70.9703C230.288 78.2569 234.584 85.6737 238.62 93.0905C238.88 93.611 239.01 94.0014 239.01 94.3917C239.141 95.3026 238.88 95.9532 238.36 96.6038C237.839 97.2543 237.188 97.6447 236.277 97.7748C234.845 97.9049 233.673 97.2544 232.892 95.823C232.111 94.3917 231.33 92.8303 230.419 91.399C226.123 91.7893 221.696 92.3098 217.4 92.8303C216.88 94.5219 216.359 96.2134 215.838 97.9049C215.448 99.3363 214.536 100.117 213.104 100.247C212.323 100.377 211.542 100.117 210.891 99.5965C210.24 99.076 209.85 98.4254 209.72 97.5146C209.85 96.9941 209.98 96.4736 210.11 95.9532ZM217.661 65.7655C216.619 65.1149 215.708 64.3342 214.667 63.6836C214.016 63.2932 213.625 62.7728 213.625 62.2523C213.625 61.7318 214.016 61.3415 214.797 60.821C215.578 60.3005 216.359 60.0403 217.14 59.9101C218.181 59.78 219.093 60.1704 219.874 61.0812C220.785 62.2523 221.696 63.2932 222.738 64.4643C223.128 64.8547 223.259 65.245 223.259 65.5053C223.389 66.1559 222.738 66.6763 221.696 66.8065C220.134 66.8065 218.832 66.5462 217.661 65.7655ZM227.685 85.8039C225.992 82.681 224.3 79.6883 222.477 76.5654C221.436 79.9485 220.395 83.3316 219.353 86.7147C222.087 86.3243 224.821 86.0641 227.685 85.8039Z\"\r\n        stroke=\"#F68317\"\r\n        strokeWidth=\"11.3161\"\r\n      />\r\n      <path\r\n        d=\"M242.785 70.1898C242.655 69.279 242.916 68.4982 243.567 67.8476C244.217 67.197 244.999 66.8067 245.91 66.6766C246.821 66.5465 247.732 66.8067 248.383 67.4573C249.034 67.9778 249.425 68.7585 249.555 69.6693C250.076 77.4765 250.727 85.2836 251.247 93.0908C251.247 94.0016 251.117 94.7823 250.466 95.4329C249.815 96.0835 249.164 96.4739 248.253 96.4739C247.342 96.604 246.561 96.3438 245.91 95.6932C245.259 95.1727 244.868 94.392 244.738 93.4811C243.957 85.8041 243.306 77.9969 242.785 70.1898Z\"\r\n        stroke=\"#F68317\"\r\n        strokeWidth=\"11.3161\"\r\n      />\r\n      <path\r\n        d=\"M270.124 68.498C270.124 67.5872 270.384 66.8065 271.035 66.1559C271.686 65.5053 272.467 65.115 273.378 65.115C274.289 65.115 275.201 65.3752 275.851 65.8957C276.502 66.5463 276.893 67.327 276.893 68.1077C277.023 71.3607 277.153 74.7438 277.283 77.9968C281.189 73.8329 285.225 69.7992 289.26 65.7655C290.171 64.8547 291.083 64.4644 292.124 64.4644C293.035 64.4644 293.816 64.7246 294.467 65.2451C294.988 65.7655 295.379 66.5463 295.379 67.327C295.379 68.2378 294.988 69.0185 294.207 69.7992C291.343 72.4016 288.609 75.004 285.875 77.7365C289.13 81.3799 292.254 85.1533 295.248 88.9268C295.899 89.5774 296.16 90.3581 296.16 91.1388C296.16 92.0496 295.899 92.8303 295.248 93.4809C294.598 94.1315 293.816 94.3918 292.905 94.3918C291.864 94.3918 290.952 93.8713 290.171 92.8303C287.307 89.187 284.313 85.6738 281.319 82.0304C280.147 83.2015 278.846 84.3726 277.674 85.5437C277.804 87.4955 277.804 89.4472 277.934 91.399C277.934 92.3099 277.674 93.0906 277.153 93.7412C276.502 94.3918 275.721 94.7821 274.81 94.7821C273.899 94.7821 273.118 94.5219 272.467 94.0014C271.816 93.3508 271.425 92.5701 271.425 91.7894C270.905 84.1124 270.514 76.3052 270.124 68.498Z\"\r\n        stroke=\"#F68317\"\r\n        strokeWidth=\"11.3161\"\r\n      />\r\n      <path\r\n        d=\"M301.237 67.7173C301.237 66.8065 301.497 66.0258 302.148 65.3752C302.799 64.7246 303.58 64.4644 304.622 64.4644C305.533 64.4644 306.314 64.7246 307.095 65.3752C307.746 66.0258 308.006 66.8065 308.006 67.7173C308.006 70.58 308.006 73.4426 308.006 76.4353C312.042 76.4353 316.208 76.4353 320.243 76.5654C320.243 73.7028 320.373 70.8402 320.373 67.8475C320.373 66.9366 320.764 66.1559 321.415 65.5053C322.066 64.8547 322.977 64.5945 323.888 64.5945C324.8 64.5945 325.581 64.9848 326.232 65.6354C326.882 66.286 327.143 67.0667 327.143 67.9776C326.882 75.7847 326.752 83.5919 326.492 91.399C326.492 92.3099 326.101 93.0906 325.45 93.7412C324.8 94.3918 324.019 94.652 323.107 94.652C322.196 94.652 321.415 94.2617 320.764 93.7412C320.113 93.0906 319.853 92.3099 319.853 91.399C319.853 88.4063 319.983 85.5437 319.983 82.5509C315.947 82.4208 311.912 82.4208 307.746 82.4208C307.746 85.4136 307.746 88.2762 307.746 91.2689C307.746 92.1798 307.486 92.9605 306.835 93.6111C306.184 94.2617 305.403 94.5219 304.491 94.5219C303.58 94.5219 302.799 94.2617 302.148 93.6111C301.497 92.9605 301.237 92.1798 301.237 91.2689C301.367 83.3316 301.367 75.5245 301.237 67.7173Z\"\r\n        stroke=\"#F68317\"\r\n        strokeWidth=\"11.3161\"\r\n      />\r\n      <path\r\n        d=\"M335.735 90.7488C332.871 87.756 331.439 84.1127 331.569 79.8188C331.569 79.8188 331.569 79.8188 331.569 79.6887C331.699 75.3947 333.392 71.8815 336.516 69.149C339.771 66.2864 343.676 64.9852 348.363 65.2454C353.049 65.5057 356.824 67.1972 359.818 70.3201C362.682 73.4429 363.854 77.0863 363.594 81.3802C363.594 81.3802 363.594 81.3802 363.594 81.5103C363.333 85.8043 361.511 89.1874 358.386 91.9199C355.132 94.6524 351.357 95.9536 346.8 95.6933C342.244 95.4331 338.729 93.8716 335.735 90.7488ZM353.83 87.3657C355.653 85.8043 356.564 83.5922 356.694 81.12C356.694 81.12 356.694 81.12 356.694 80.9898C356.824 78.3875 356.173 76.1754 354.611 74.3538C352.919 72.402 350.836 71.361 348.102 71.2309C345.499 71.1008 343.155 71.8815 341.463 73.5731C339.64 75.2646 338.729 77.3465 338.599 79.9489C338.599 79.9489 338.599 79.9489 338.599 80.079C338.469 82.6814 339.25 84.8934 340.942 86.7151C342.504 88.5368 344.717 89.5777 347.321 89.7078C349.794 89.838 352.008 89.1874 353.83 87.3657Z\"\r\n        stroke=\"#F68317\"\r\n        strokeWidth=\"11.3161\"\r\n      />\r\n      <path\r\n        d=\"M366.978 92.3099C371.014 84.8931 375.18 77.4763 379.476 70.0595C380.387 68.368 381.819 67.7174 383.641 67.8475C383.772 67.8475 383.902 67.8475 384.032 67.8475C385.855 67.9776 387.026 69.0186 387.677 70.8402C390.411 78.9076 393.014 86.975 395.618 95.0424C395.748 95.5629 395.878 95.9533 395.748 96.3436C395.618 97.2544 395.228 97.905 394.577 98.4255C393.926 98.946 393.145 99.2062 392.233 99.0761C390.801 98.946 389.89 98.0352 389.369 96.4737C388.849 94.9123 388.328 93.2207 387.937 91.6593C383.641 91.1388 379.215 90.7485 374.919 90.3581C374.138 91.9196 373.227 93.481 372.446 95.0424C371.795 96.3436 370.623 96.8641 369.321 96.8641C368.54 96.734 367.759 96.4737 367.239 95.8231C366.718 95.1725 366.458 94.3918 366.458 93.6111C366.588 93.3509 366.718 92.8304 366.978 92.3099ZM383.511 66.5463C382.6 66.4162 382.079 65.8957 382.079 65.115C382.079 64.7246 382.079 64.3343 382.079 63.9439C381.949 62.903 382.47 62.3825 383.641 62.3825C384.813 62.3825 385.334 62.1223 385.334 61.7319C385.334 61.3415 385.073 61.0813 384.422 61.0813C383.902 61.0813 383.251 61.0813 382.73 61.4717C382.34 61.7319 381.949 61.862 381.559 61.7319C381.038 61.7319 380.647 61.4717 380.257 61.0813C379.996 60.6909 379.736 60.1705 379.866 59.7801C379.866 59.2596 380.127 58.7392 380.647 58.4789C381.819 57.6982 383.251 57.3078 384.813 57.5681C386.245 57.6982 387.417 58.2187 388.198 58.9994C389.109 59.9102 389.369 60.9512 389.239 62.2524C388.979 64.3343 387.677 65.5054 385.334 65.7656V65.6355C385.073 66.5463 384.553 66.9367 383.641 66.8065C383.641 66.5463 383.641 66.5463 383.511 66.5463ZM386.245 85.9341C385.204 82.551 384.162 79.1679 382.991 75.9149C381.298 79.0378 379.606 82.0305 377.913 85.1534C380.647 85.2835 383.381 85.6738 386.245 85.9341Z\"\r\n        stroke=\"#F68317\"\r\n        strokeWidth=\"11.3161\"\r\n      />\r\n      <path\r\n        d=\"M403.82 73.7029C403.95 72.7921 404.341 72.0114 405.122 71.4909C405.903 70.9704 406.684 70.7102 407.595 70.8403C407.855 70.8403 408.116 70.8403 408.246 70.9704C409.548 71.1005 410.589 71.8812 411.5 73.3125C415.146 79.298 418.53 85.2835 421.915 91.3991C422.696 86.4546 423.477 81.3799 424.128 76.4354C424.258 75.5246 424.649 74.874 425.43 74.3535C426.211 73.833 426.992 73.7029 427.903 73.833C428.815 73.9631 429.596 74.3535 430.116 75.1342C430.637 75.9149 430.897 76.6957 430.767 77.4764C429.596 85.1534 428.294 92.9606 427.122 100.638C426.992 101.548 426.601 102.199 425.82 102.719C425.039 103.24 424.258 103.37 423.347 103.24C423.217 103.24 423.217 103.24 423.087 103.24C421.785 103.11 420.743 102.199 419.962 100.898C416.447 94.6521 412.932 88.4064 409.287 82.2908C408.637 87.4955 407.855 92.7003 407.205 97.9051C407.074 98.8159 406.684 99.4665 406.033 99.987C405.382 100.507 404.471 100.768 403.69 100.638C402.778 100.507 402.127 100.117 401.477 99.4665C400.956 98.8159 400.695 98.0352 400.826 97.1244C401.867 89.3172 402.909 81.5101 403.82 73.7029Z\"\r\n        stroke=\"#F68317\"\r\n        strokeWidth=\"11.3161\"\r\n      />\r\n      <path\r\n        d=\"M203.08 32.3252C202.69 29.4626 202.43 26.7301 202.039 23.8675C201.909 22.9566 202.169 22.1759 202.82 21.3952C203.471 20.7446 204.252 20.2241 205.294 20.2241C208.288 19.8338 211.412 19.5735 214.406 19.1832C219.483 18.6627 223.779 19.5735 227.294 22.0458C230.679 24.5181 232.632 27.9012 233.022 32.065C233.022 32.065 233.022 32.065 233.022 32.1951C233.413 36.3589 232.111 40.0022 229.247 42.995C226.253 46.1178 222.477 47.9395 217.531 48.46C214.667 48.7202 211.672 49.1106 208.808 49.5009C207.897 49.6311 206.986 49.3708 206.205 48.8503C205.424 48.3299 205.033 47.5492 204.903 46.6383C204.512 43.7757 204.122 40.9131 203.862 38.0505C203.601 38.0505 203.471 38.0505 203.211 38.1806C202.299 38.3107 201.648 38.0505 200.867 37.6601C200.216 37.1396 199.826 36.6191 199.696 35.7083C199.566 34.9276 199.826 34.1469 200.347 33.6264C200.867 32.9758 201.518 32.5854 202.43 32.4553C202.69 32.4553 202.82 32.4553 203.08 32.3252ZM209.98 31.5445C211.412 31.4144 212.714 31.2843 214.146 31.024C215.057 30.8939 215.838 31.1541 216.489 31.6746C217.14 32.1951 217.531 32.8457 217.661 33.6264C217.791 34.4071 217.531 35.1878 217.01 35.7083C216.489 36.3589 215.838 36.7493 214.927 36.7493C213.625 36.8794 212.193 37.0095 210.891 37.2697C211.152 39.3516 211.412 41.3034 211.542 43.3853C213.365 43.1251 215.187 42.995 217.01 42.7347C219.874 42.4745 222.087 41.4336 223.649 39.6119C225.211 37.7902 225.862 35.5782 225.602 32.9758C225.602 32.9758 225.602 32.9758 225.602 32.8457C225.341 30.2433 224.3 28.1614 222.347 26.7301C220.395 25.2988 217.921 24.6482 215.057 25.0385C213.235 25.2988 211.282 25.4289 209.459 25.6891C209.59 27.6409 209.85 29.5927 209.98 31.5445Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M236.928 42.4744C239.922 34.407 243.046 26.4697 246.301 18.5325C246.952 16.7108 248.384 15.8 250.336 15.6698C250.466 15.6698 250.597 15.6698 250.727 15.6698C252.68 15.5397 254.112 16.3204 255.023 18.012C259.319 25.4288 263.354 32.9757 267.39 40.5226C267.65 41.0431 267.781 41.4334 267.781 41.8238C267.781 42.7346 267.52 43.3852 266.999 44.0358C266.349 44.6864 265.698 45.0768 264.656 45.0768C263.094 45.2069 261.922 44.4262 261.271 42.9949C260.49 41.4334 259.709 40.0021 258.928 38.4407C254.242 38.7009 249.685 38.9612 244.999 39.3515C244.348 41.0431 243.827 42.7346 243.176 44.2961C242.656 45.7274 241.614 46.378 240.182 46.5081C239.271 46.6382 238.49 46.378 237.839 45.8575C237.188 45.337 236.797 44.6864 236.667 43.7756C236.537 43.5154 236.667 42.9949 236.928 42.4744ZM242.135 10.3349C241.875 9.94459 241.744 9.55423 241.744 9.16388C241.744 8.51328 241.875 7.9928 242.395 7.60245C242.786 7.21209 243.437 6.95185 244.088 6.82173C244.999 6.82173 245.65 7.08197 246.301 7.73257C247.212 8.77352 248.384 9.294 250.076 9.16388C251.768 9.03376 252.81 8.38316 253.591 7.21209C254.112 6.43137 254.762 6.04102 255.674 6.04102C256.325 6.04102 256.976 6.17113 257.496 6.56149C258.017 6.95185 258.277 7.47233 258.277 8.12292C258.277 8.51328 258.277 8.90364 258.017 9.294C256.585 11.7663 254.112 13.0675 250.466 13.3277C246.561 13.5879 243.827 12.6771 242.135 10.3349ZM255.934 32.8456C254.242 29.7227 252.549 26.5999 250.857 23.477C249.555 26.8601 248.253 30.1131 247.082 33.4962C250.076 33.2359 252.94 32.9757 255.934 32.8456Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M272.337 18.012C272.337 17.1011 272.597 16.3204 273.248 15.6698C273.899 15.0192 274.81 14.6289 275.722 14.6289C275.982 14.6289 276.242 14.6289 276.503 14.6289C277.935 14.6289 279.236 15.1494 280.278 16.4505C285.095 21.7854 289.781 27.1203 294.337 32.5853C294.207 27.5107 294.207 22.436 294.077 17.3614C294.077 16.4505 294.337 15.6698 295.119 15.0192C295.769 14.3686 296.681 14.1084 297.592 14.1084C298.633 14.1084 299.415 14.3686 300.065 15.0192C300.716 15.6698 301.107 16.4505 301.107 17.2313C301.107 25.0384 301.237 32.8456 301.237 40.6527C301.237 41.5636 300.977 42.3443 300.196 42.9949C299.545 43.6455 298.633 43.9057 297.722 43.9057C297.592 43.9057 297.592 43.9057 297.462 43.9057C296.16 43.9057 294.858 43.2551 293.817 42.084C289.13 36.4889 284.314 30.8938 279.367 25.4288C279.497 30.6335 279.757 35.9684 279.887 41.1732C279.887 42.084 279.627 42.8647 278.976 43.5153C278.325 44.1659 277.544 44.4262 276.633 44.5563C275.722 44.5563 274.81 44.2961 274.159 43.7756C273.509 43.125 273.118 42.4744 273.118 41.5636C272.988 33.6263 272.597 25.8191 272.337 18.012Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M311.001 39.8718C308.007 37.0092 306.444 33.3659 306.444 29.0719C306.444 29.0719 306.444 29.0719 306.444 28.9418C306.444 24.6479 308.007 21.1347 311.261 18.1419C314.516 15.1492 318.681 13.7179 323.498 13.848C327.924 13.9781 331.569 15.019 334.563 16.9708C335.475 17.6214 335.995 18.5323 335.995 19.5732C335.995 20.4841 335.605 21.2648 334.954 21.7853C334.303 22.4358 333.392 22.6961 332.481 22.566C331.699 22.566 331.049 22.3057 330.267 21.7853C328.185 20.3539 325.841 19.7033 323.238 19.5732C320.634 19.5732 318.421 20.3539 316.598 22.1756C314.776 23.9973 313.865 26.0792 313.865 28.6816C313.865 28.6816 313.865 28.6816 313.865 28.8117C313.865 31.5442 314.776 33.7562 316.468 35.5779C318.161 37.3996 320.504 38.3104 323.368 38.3104C325.971 38.3104 328.185 37.7899 330.007 36.749C330.007 35.3177 330.137 33.8863 330.137 32.5851C328.575 32.5851 327.013 32.455 325.451 32.455C324.539 32.455 323.889 32.1948 323.368 31.6743C322.847 31.1538 322.457 30.5032 322.457 29.7225C322.457 28.9418 322.847 28.2912 323.368 27.7707C324.019 27.2503 324.67 26.99 325.581 26.99C328.315 26.99 330.918 27.1201 333.652 27.2503C334.563 27.2503 335.475 27.6406 336.126 28.2912C336.777 28.9418 337.037 29.7225 337.037 30.6334C336.907 32.9755 336.907 35.4478 336.777 37.7899C336.646 39.6116 335.865 41.0429 334.173 41.8236C330.658 43.6453 327.013 44.5561 323.108 44.426C318.161 44.1658 314.125 42.7344 311.001 39.8718Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M358.256 18.7925C358.256 17.8817 358.647 17.101 359.428 16.5805C360.209 15.9299 361.12 15.7998 362.031 15.7998C362.943 15.7998 363.854 16.1902 364.505 16.8408C365.156 17.4914 365.416 18.2721 365.416 19.1829C365.156 22.4359 364.895 25.819 364.765 29.072C369.322 25.4286 374.008 21.7853 378.825 18.2721C379.866 17.4914 380.908 17.2311 381.949 17.2311C382.991 17.3612 383.642 17.6215 384.292 18.2721C384.813 18.9227 385.074 19.7034 384.943 20.4841C384.813 21.3949 384.423 22.1756 383.381 22.8262C380.127 25.1684 376.872 27.3804 373.618 29.7226C376.612 33.7563 379.476 37.7899 382.47 41.8236C382.991 42.6044 383.251 43.3851 383.251 44.1658C383.121 45.0766 382.73 45.7272 382.079 46.3778C381.298 46.8983 380.517 47.1585 379.476 47.0284C378.434 46.8983 377.523 46.3778 376.742 45.2067C374.008 41.3032 371.274 37.3996 368.541 33.496C367.109 34.537 365.677 35.5779 364.245 36.6189C364.114 38.5707 363.984 40.5225 363.854 42.4742C363.854 43.3851 363.463 44.1658 362.682 44.6863C361.901 45.2067 361.12 45.467 360.209 45.467C359.298 45.467 358.386 45.0766 357.735 44.426C357.085 43.7754 356.824 42.9947 356.954 42.0839C357.215 34.4069 357.736 26.5997 358.256 18.7925Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M397.311 37.2696C394.316 32.5854 391.322 28.0312 388.328 23.3469C387.807 22.5662 387.547 21.7855 387.677 21.0047C387.807 20.0939 388.198 19.4433 388.849 18.9228C389.63 18.4024 390.541 18.1421 391.452 18.2722C392.754 18.4024 393.926 19.1831 394.837 20.6144C397.05 24.2577 399.394 28.0312 401.476 31.6745C404.471 28.5517 407.595 25.4288 410.719 22.3059C411.891 21.1349 413.062 20.6144 414.364 20.8746C415.406 21.0047 416.187 21.3951 416.838 22.1758C417.358 22.8264 417.619 23.6071 417.489 24.518C417.358 25.1686 416.968 25.9493 416.317 26.5999C412.281 30.3733 408.376 34.1468 404.34 38.0504C403.95 40.913 403.689 43.6455 403.299 46.5081C403.169 47.4189 402.778 48.1997 401.997 48.7201C401.216 49.2406 400.305 49.5009 399.393 49.3707C398.482 49.2406 397.571 48.8503 397.05 48.1997C396.399 47.5491 396.269 46.6382 396.269 45.7274C396.79 42.8648 397.05 40.0022 397.311 37.2696ZM401.346 16.3205C401.346 16.0602 401.607 15.6699 401.997 15.2795C403.039 14.2386 403.95 13.0675 404.991 12.0265C405.772 11.1157 406.684 10.7253 407.855 10.8555C408.767 10.9856 409.548 11.2458 410.459 11.7663C411.24 12.2868 411.761 12.8072 411.631 13.3277C411.631 13.8482 411.24 14.2386 410.459 14.759C409.417 15.4096 408.376 16.1903 407.335 16.8409C406.163 17.6216 404.731 17.8819 403.169 17.7518C401.737 17.4915 401.216 17.1012 401.346 16.3205Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M191.755 79.0378C189.672 79.2981 187.459 79.6884 185.376 79.9487C184.595 80.0788 183.814 79.9487 183.033 79.4282C182.382 78.9077 181.861 78.2571 181.861 77.4764C181.731 76.6957 181.991 75.915 182.382 75.2644C182.902 74.6138 183.553 74.2234 184.465 74.0933C190.974 73.0523 197.483 72.1415 203.992 71.3608C204.773 71.2307 205.554 71.4909 206.335 72.0114C206.986 72.5319 207.376 73.1825 207.507 73.9632C207.637 74.7439 207.376 75.5246 206.856 76.1752C206.335 76.8258 205.684 77.2162 204.773 77.3463C202.69 77.6065 200.477 77.8668 198.394 78.2571C199.305 85.0233 200.217 91.7895 201.128 98.5557C201.258 99.4665 200.998 100.247 200.477 101.028C199.956 101.679 199.175 102.199 198.264 102.329C197.353 102.459 196.571 102.329 195.79 101.679C195.009 101.158 194.619 100.377 194.489 99.4666C193.707 92.4401 192.666 85.804 191.755 79.0378Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M210.11 95.9532C212.584 87.8858 215.187 79.8184 217.791 71.751C218.442 69.9293 219.613 69.0185 221.436 68.7582C221.566 68.7582 221.696 68.7582 221.827 68.7582C223.649 68.6281 224.951 69.2787 225.992 70.9703C230.288 78.2569 234.584 85.6737 238.62 93.0905C238.88 93.611 239.01 94.0014 239.01 94.3917C239.141 95.3026 238.88 95.9532 238.36 96.6038C237.839 97.2543 237.188 97.6447 236.277 97.7748C234.845 97.9049 233.673 97.2544 232.892 95.823C232.111 94.3917 231.33 92.8303 230.419 91.399C226.123 91.7893 221.696 92.3098 217.4 92.8303C216.88 94.5219 216.359 96.2134 215.838 97.9049C215.448 99.3363 214.536 100.117 213.104 100.247C212.323 100.377 211.542 100.117 210.891 99.5965C210.24 99.076 209.85 98.4254 209.72 97.5146C209.85 96.9941 209.98 96.4736 210.11 95.9532ZM217.661 65.7655C216.619 65.1149 215.708 64.3342 214.667 63.6836C214.016 63.2932 213.625 62.7728 213.625 62.2523C213.625 61.7318 214.016 61.3415 214.797 60.821C215.578 60.3005 216.359 60.0403 217.14 59.9101C218.181 59.78 219.093 60.1704 219.874 61.0812C220.785 62.2523 221.696 63.2932 222.738 64.4643C223.128 64.8547 223.259 65.245 223.259 65.5053C223.389 66.1559 222.738 66.6763 221.696 66.8065C220.134 66.8065 218.832 66.5462 217.661 65.7655ZM227.685 85.8039C225.992 82.681 224.3 79.6883 222.477 76.5654C221.436 79.9485 220.395 83.3316 219.353 86.7147C222.087 86.3243 224.821 86.0641 227.685 85.8039Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M242.785 70.1898C242.655 69.279 242.916 68.4982 243.567 67.8476C244.217 67.197 244.999 66.8067 245.91 66.6766C246.821 66.5465 247.732 66.8067 248.383 67.4573C249.034 67.9778 249.425 68.7585 249.555 69.6693C250.076 77.4765 250.727 85.2836 251.247 93.0908C251.247 94.0016 251.117 94.7823 250.466 95.4329C249.815 96.0835 249.164 96.4739 248.253 96.4739C247.342 96.604 246.561 96.3438 245.91 95.6932C245.259 95.1727 244.868 94.392 244.738 93.4811C243.957 85.8041 243.306 77.9969 242.785 70.1898Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M270.124 68.498C270.124 67.5872 270.384 66.8065 271.035 66.1559C271.686 65.5053 272.467 65.115 273.378 65.115C274.289 65.115 275.201 65.3752 275.851 65.8957C276.502 66.5463 276.893 67.327 276.893 68.1077C277.023 71.3607 277.153 74.7438 277.283 77.9968C281.189 73.8329 285.225 69.7992 289.26 65.7655C290.171 64.8547 291.083 64.4644 292.124 64.4644C293.035 64.4644 293.816 64.7246 294.467 65.2451C294.988 65.7655 295.379 66.5463 295.379 67.327C295.379 68.2378 294.988 69.0185 294.207 69.7992C291.343 72.4016 288.609 75.004 285.875 77.7365C289.13 81.3799 292.254 85.1533 295.248 88.9268C295.899 89.5774 296.16 90.3581 296.16 91.1388C296.16 92.0496 295.899 92.8303 295.248 93.4809C294.598 94.1315 293.816 94.3918 292.905 94.3918C291.864 94.3918 290.952 93.8713 290.171 92.8303C287.307 89.187 284.313 85.6738 281.319 82.0304C280.147 83.2015 278.846 84.3726 277.674 85.5437C277.804 87.4955 277.804 89.4472 277.934 91.399C277.934 92.3099 277.674 93.0906 277.153 93.7412C276.502 94.3918 275.721 94.7821 274.81 94.7821C273.899 94.7821 273.118 94.5219 272.467 94.0014C271.816 93.3508 271.425 92.5701 271.425 91.7894C270.905 84.1124 270.514 76.3052 270.124 68.498Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M301.237 67.7173C301.237 66.8065 301.497 66.0258 302.148 65.3752C302.799 64.7246 303.58 64.4644 304.622 64.4644C305.533 64.4644 306.314 64.7246 307.095 65.3752C307.746 66.0258 308.006 66.8065 308.006 67.7173C308.006 70.58 308.006 73.4426 308.006 76.4353C312.042 76.4353 316.208 76.4353 320.243 76.5654C320.243 73.7028 320.373 70.8402 320.373 67.8475C320.373 66.9366 320.764 66.1559 321.415 65.5053C322.066 64.8547 322.977 64.5945 323.888 64.5945C324.8 64.5945 325.581 64.9848 326.232 65.6354C326.882 66.286 327.143 67.0667 327.143 67.9776C326.882 75.7847 326.752 83.5919 326.492 91.399C326.492 92.3099 326.101 93.0906 325.45 93.7412C324.8 94.3918 324.019 94.652 323.107 94.652C322.196 94.652 321.415 94.2617 320.764 93.7412C320.113 93.0906 319.853 92.3099 319.853 91.399C319.853 88.4063 319.983 85.5437 319.983 82.5509C315.947 82.4208 311.912 82.4208 307.746 82.4208C307.746 85.4136 307.746 88.2762 307.746 91.2689C307.746 92.1798 307.486 92.9605 306.835 93.6111C306.184 94.2617 305.403 94.5219 304.491 94.5219C303.58 94.5219 302.799 94.2617 302.148 93.6111C301.497 92.9605 301.237 92.1798 301.237 91.2689C301.367 83.3316 301.367 75.5245 301.237 67.7173Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M335.735 90.7488C332.871 87.756 331.439 84.1127 331.569 79.8188C331.569 79.8188 331.569 79.8188 331.569 79.6887C331.699 75.3947 333.392 71.8815 336.516 69.149C339.771 66.2864 343.676 64.9852 348.363 65.2454C353.049 65.5057 356.824 67.1972 359.818 70.3201C362.682 73.4429 363.854 77.0863 363.594 81.3802C363.594 81.3802 363.594 81.3802 363.594 81.5103C363.333 85.8043 361.511 89.1874 358.386 91.9199C355.132 94.6524 351.357 95.9536 346.8 95.6933C342.244 95.4331 338.729 93.8716 335.735 90.7488ZM353.83 87.3657C355.653 85.8043 356.564 83.5922 356.694 81.12C356.694 81.12 356.694 81.12 356.694 80.9898C356.824 78.3875 356.173 76.1754 354.611 74.3538C352.919 72.402 350.836 71.361 348.102 71.2309C345.499 71.1008 343.155 71.8815 341.463 73.5731C339.64 75.2646 338.729 77.3465 338.599 79.9489C338.599 79.9489 338.599 79.9489 338.599 80.079C338.469 82.6814 339.25 84.8934 340.942 86.7151C342.504 88.5368 344.717 89.5777 347.321 89.7078C349.794 89.838 352.008 89.1874 353.83 87.3657Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M366.978 92.3099C371.014 84.8931 375.18 77.4763 379.476 70.0595C380.387 68.368 381.819 67.7174 383.641 67.8475C383.772 67.8475 383.902 67.8475 384.032 67.8475C385.855 67.9776 387.026 69.0186 387.677 70.8402C390.411 78.9076 393.014 86.975 395.618 95.0424C395.748 95.5629 395.878 95.9533 395.748 96.3436C395.618 97.2544 395.228 97.905 394.577 98.4255C393.926 98.946 393.145 99.2062 392.233 99.0761C390.801 98.946 389.89 98.0352 389.369 96.4737C388.849 94.9123 388.328 93.2207 387.937 91.6593C383.641 91.1388 379.215 90.7485 374.919 90.3581C374.138 91.9196 373.227 93.481 372.446 95.0424C371.795 96.3436 370.623 96.8641 369.321 96.8641C368.54 96.734 367.759 96.4737 367.239 95.8231C366.718 95.1725 366.458 94.3918 366.458 93.6111C366.588 93.3509 366.718 92.8304 366.978 92.3099ZM383.511 66.5463C382.6 66.4162 382.079 65.8957 382.079 65.115C382.079 64.7246 382.079 64.3343 382.079 63.9439C381.949 62.903 382.47 62.3825 383.641 62.3825C384.813 62.3825 385.334 62.1223 385.334 61.7319C385.334 61.3415 385.073 61.0813 384.422 61.0813C383.902 61.0813 383.251 61.0813 382.73 61.4717C382.34 61.7319 381.949 61.862 381.559 61.7319C381.038 61.7319 380.647 61.4717 380.257 61.0813C379.996 60.6909 379.736 60.1705 379.866 59.7801C379.866 59.2596 380.127 58.7392 380.647 58.4789C381.819 57.6982 383.251 57.3078 384.813 57.5681C386.245 57.6982 387.417 58.2187 388.198 58.9994C389.109 59.9102 389.369 60.9512 389.239 62.2524C388.979 64.3343 387.677 65.5054 385.334 65.7656V65.6355C385.073 66.5463 384.553 66.9367 383.641 66.8065C383.641 66.5463 383.641 66.5463 383.511 66.5463ZM386.245 85.9341C385.204 82.551 384.162 79.1679 382.991 75.9149C381.298 79.0378 379.606 82.0305 377.913 85.1534C380.647 85.2835 383.381 85.6738 386.245 85.9341Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M403.82 73.7029C403.95 72.7921 404.341 72.0114 405.122 71.4909C405.903 70.9704 406.684 70.7102 407.595 70.8403C407.855 70.8403 408.116 70.8403 408.246 70.9704C409.548 71.1005 410.589 71.8812 411.5 73.3125C415.146 79.298 418.53 85.2835 421.915 91.3991C422.696 86.4546 423.477 81.3799 424.128 76.4354C424.258 75.5246 424.649 74.874 425.43 74.3535C426.211 73.833 426.992 73.7029 427.903 73.833C428.815 73.9631 429.596 74.3535 430.116 75.1342C430.637 75.9149 430.897 76.6957 430.767 77.4764C429.596 85.1534 428.294 92.9606 427.122 100.638C426.992 101.548 426.601 102.199 425.82 102.719C425.039 103.24 424.258 103.37 423.347 103.24C423.217 103.24 423.217 103.24 423.087 103.24C421.785 103.11 420.743 102.199 419.962 100.898C416.447 94.6521 412.932 88.4064 409.287 82.2908C408.637 87.4955 407.855 92.7003 407.205 97.9051C407.074 98.8159 406.684 99.4665 406.033 99.987C405.382 100.507 404.471 100.768 403.69 100.638C402.778 100.507 402.127 100.117 401.477 99.4665C400.956 98.8159 400.695 98.0352 400.826 97.1244C401.867 89.3172 402.909 81.5101 403.82 73.7029Z\"\r\n        fill=\"white\"\r\n      />\r\n      <defs>\r\n        <linearGradient\r\n          id=\"paint0_linear_formSignupaccountinfowrapper\"\r\n          x1=\"314.006\"\r\n          y1=\"550.396\"\r\n          x2=\"314.006\"\r\n          y2=\"74.4205\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stopColor=\"#FEB32C\" />\r\n          <stop offset=\"0.00304192\" stopColor=\"#FEB22C\" />\r\n          <stop offset=\"0.0667296\" stopColor=\"#FEA827\" />\r\n          <stop offset=\"0.1452\" stopColor=\"#FEA525\" />\r\n          <stop offset=\"1\" stopColor=\"#FEB336\" />\r\n        </linearGradient>\r\n        <linearGradient\r\n          id=\"paint1_linear_formSignupaccountinfowrapper\"\r\n          x1=\"315.065\"\r\n          y1=\"538.95\"\r\n          x2=\"315.065\"\r\n          y2=\"86.0696\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stopColor=\"#FFCB44\" />\r\n          <stop offset=\"1\" stopColor=\"#FFDE6C\" />\r\n        </linearGradient>\r\n        <linearGradient\r\n          id=\"paint2_linear_formSignupaccountinfowrapper\"\r\n          x1=\"313.994\"\r\n          y1=\"531.451\"\r\n          x2=\"313.994\"\r\n          y2=\"96.1528\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stopColor=\"#FEB32C\" />\r\n          <stop offset=\"0.00304192\" stopColor=\"#FEB22C\" />\r\n          <stop offset=\"0.0667296\" stopColor=\"#FEA827\" />\r\n          <stop offset=\"0.1452\" stopColor=\"#FEA525\" />\r\n          <stop offset=\"1\" stopColor=\"#FEB336\" />\r\n        </linearGradient>\r\n        <linearGradient\r\n          id=\"paint3_linear_formSignupaccountinfowrapper\"\r\n          x1=\"315.192\"\r\n          y1=\"82.1188\"\r\n          x2=\"315.192\"\r\n          y2=\"512.478\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stopColor=\"#FEA525\" />\r\n          <stop offset=\"1\" stopColor=\"#FEA526\" />\r\n        </linearGradient>\r\n        <linearGradient\r\n          id=\"paint4_linear_formSignupaccountinfowrapper\"\r\n          x1=\"315.197\"\r\n          y1=\"83.7228\"\r\n          x2=\"315.197\"\r\n          y2=\"525.383\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stopColor=\"#FD8C23\" />\r\n          <stop offset=\"1\" stopColor=\"#FEA52A\" />\r\n        </linearGradient>\r\n        <linearGradient\r\n          id=\"paint5_linear_formSignupaccountinfowrapper\"\r\n          x1=\"313.212\"\r\n          y1=\"8.17245\"\r\n          x2=\"313.212\"\r\n          y2=\"142.762\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stopColor=\"#F68317\" />\r\n          <stop offset=\"0.2581\" stopColor=\"#F57D18\" />\r\n          <stop offset=\"0.6054\" stopColor=\"#F16C1C\" />\r\n          <stop offset=\"1\" stopColor=\"#EA5023\" />\r\n        </linearGradient>\r\n        <linearGradient\r\n          id=\"paint6_linear_formSignupaccountinfowrapper\"\r\n          x1=\"313.208\"\r\n          y1=\"144.279\"\r\n          x2=\"313.208\"\r\n          y2=\"5.02291\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stopColor=\"#FD8C23\" />\r\n          <stop offset=\"1\" stopColor=\"#FFBC30\" />\r\n        </linearGradient>\r\n      </defs>\r\n    </svg>\r\n  )\r\n}\r\n","import { createSelector } from 'reselect'\r\nexport const reducer = (state) => state.formForgotPassword\r\n\r\nexport const formSubmitLoadingSelector = createSelector(\r\n    reducer,\r\n    (data) => data?.formForgotPasswordLoading || false\r\n)\r\n\r\nexport const formSubmitSuccessSelector = createSelector(\r\n    reducer,\r\n    (data) => data?.formForgotPasswordSuccess || false\r\n)\r\n\r\nexport const formSubmitErrorSelector = createSelector(\r\n    reducer,\r\n    (data) => data?.formForgotPasswordError || false\r\n)\r\n\r\nexport const formSubmitDataResponseSelector = createSelector(\r\n    reducer,\r\n    (data) => data?.formForgotPasswordDataResponse || null\r\n)\r\n","import * as Yup from 'yup'\r\nimport { messageError, emailOrPhoneRegex } from '@utils'\r\n\r\nexport const getValueForm = (valuesDefault = {}) => {\r\n  return {\r\n    username: '',\r\n    number_phone_or_email: '',\r\n    ...valuesDefault\r\n  }\r\n}\r\n\r\nexport const validationSchema = i18n => {\r\n  return Yup.object().shape({\r\n    number_phone_or_email: Yup.string()\r\n    .nullable()\r\n    .required(\r\n      messageError(\r\n        i18n.t(\"validation:required\"), \r\n        i18n.t(\"FormForgotPassword:field:number_phone_or_email\")\r\n      )\r\n    )\r\n  .matches(emailOrPhoneRegex, messageError(i18n.t(\"validation:emailOrPhoneRegex\"), i18n.t(\"FormForgotPassword:field:number_phone_or_email\"))),\r\n  \r\n  username: Yup.string()\r\n    .nullable()\r\n    .required(\r\n      messageError(\r\n        i18n.t('validation:required'),\r\n        i18n.t('FormForgotPassword:field:user_name')\r\n      )\r\n    )\r\n  \r\n  })\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Form, Button, Input } from \"reactstrap\"\r\nimport { Formik } from \"formik\"\r\nimport FormField from \"../../../components/FormField\"\r\nimport { ForgotPasswordWrapper, ForgotPasswordButton } from \"../assets/icon\"\r\n\r\n/* Helpers */\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport {\r\n  formSubmitErrorSelector,\r\n  formSubmitDataResponseSelector,\r\n  formSubmitLoadingSelector,\r\n  formSubmitSuccessSelector\r\n} from \"../store/formForgotPassword/selector\"\r\nimport {\r\n  formSubmitErrorSelector as formVerifyAccountErrorSelector,\r\n  formSubmitDataResponseSelector as formVerifyResponseSelector,\r\n  formSubmitLoadingSelector as formVerifyLoadingSelector,\r\n  formSubmitSuccessSelector as formVerifySuccessSelector\r\n} from \"../store/formVerifyAccount/selector\"\r\n\r\nimport { toast } from \"react-toastify\"\r\nimport { validationSchema, getValueForm } from \"../validation/forgotPassword\"\r\nimport { actions } from \"../store/formForgotPassword/reducer\"\r\nimport { actions as verifyActions } from \"../store/formVerifyAccount/reducer\"\r\n\r\nimport \"../styles/index.scss\"\r\nimport { sendOtp } from \"../store/auth/service\"\r\n\r\nconst ForgotPassword = () => {\r\n  const { i18n } = useTranslation()\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const [otpSent, setOtpSent] = useState(false)\r\n  const [otpCode, setOtpCode] = useState()\r\n  const [formData, setFormData] = useState({})\r\n  const [listAccount, setListAccount] = useState()\r\n  const [startCountDown, setStartCountDown] = React.useState(false)\r\n  const [countDown, setCountDown] = React.useState(60)\r\n\r\n  const error = useSelector((state) => formSubmitErrorSelector(state))\r\n  const response = useSelector((state) => formSubmitDataResponseSelector(state))\r\n  const loading = useSelector((state) => formSubmitLoadingSelector(state))\r\n  const formSubmitSuccess = useSelector((state) =>\r\n    formSubmitSuccessSelector(state)\r\n  )\r\n\r\n  const verifyError = useSelector(formVerifyAccountErrorSelector)\r\n  const verifyResponse = useSelector(formVerifyResponseSelector)\r\n  const verifyLoading = useSelector(formVerifyLoadingSelector)\r\n  const verifySuccess = useSelector(formVerifySuccessSelector)\r\n\r\n  const onSubmit = (values) => {\r\n    setFormData(values)\r\n    dispatch(actions.formForgotPasswordFnMethod(values))\r\n  }\r\n\r\n  const getOtp = async (phoneNumber) => {\r\n    const res = await sendOtp({ codeLanguage: \"vi-VN\", payload: phoneNumber })\r\n    const data = res.data\r\n    if (data.retCode === 0) {\r\n      toast.success(data.retText, {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined\r\n      })\r\n    } else {\r\n      toast.error(data.retText, {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined\r\n      })\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    let id = null\r\n    if (startCountDown) {\r\n      id = setInterval(() => {\r\n        setCountDown((old) => old - 1)\r\n      }, 1000)\r\n    }\r\n    return () => clearInterval(id)\r\n  }, [startCountDown])\r\n\r\n  React.useEffect(() => {\r\n    if (countDown === 0) {\r\n      setStartCountDown(false)\r\n      setCountDown(60)\r\n    }\r\n  }, [countDown])\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error(response.error?.retText, {\r\n        position: \"top-center\",\r\n        autoClose: 3000\r\n      })\r\n      setOtpSent(false)\r\n      dispatch(actions.formForgotPasswordFnReset())\r\n      return () => {\r\n        dispatch(actions.formForgotPasswordFnReset())\r\n      }\r\n    }\r\n    if (formSubmitSuccess) {\r\n      setOtpSent(true)\r\n      setStartCountDown(true)\r\n    }\r\n    return () => {\r\n      dispatch(actions.formForgotPasswordFnReset())\r\n    }\r\n  }, [formSubmitSuccess, error])\r\n  const onOtpSubmit = () => {\r\n    dispatch(\r\n      verifyActions.formVerifyAccountFnMethod({\r\n        otp: otpCode,\r\n        phone: formData?.number_phone_or_email,\r\n        userName: formData?.username\r\n      })\r\n    )\r\n  }\r\n  useEffect(() => {\r\n    if (verifyError) {\r\n      toast.error(verifyResponse.error?.retText, {\r\n        position: \"top-center\",\r\n        autoClose: 3000\r\n      })\r\n    } else if (verifySuccess) {\r\n      setListAccount(verifyResponse)\r\n      setStartCountDown(false)\r\n    }\r\n    return () => {\r\n      dispatch(verifyActions.formVerifyAccountFnReset())\r\n    }\r\n  }, [verifyError, verifyResponse])\r\n\r\n  return listAccount?.length ? (\r\n    <div className=\"forgot-password-page-wrapper\">\r\n      <h1 className=\"forgot-password-page__header\">Tài khoản của bạn</h1>\r\n      <div style={{ position: \"relative\" }}>\r\n        <ForgotPasswordWrapper />\r\n\r\n        <div className=\"forgot-password__form-wrapper\">\r\n          <div className=\"d-flex flex-column\">\r\n            <span className=\"result-account__text\">{`Tài khoản: ${listAccount[0]?.userName}`}</span>\r\n            <span className=\"result-account__text\">{`Mật khẩu: ${listAccount[0]?.password}`}</span>\r\n            <span className=\"result-account__text\">{`${listAccount[0]?.activeCourse}`}</span>\r\n          </div>\r\n\r\n          <div\r\n            onClick={() => {\r\n              history.push(\"/\")\r\n            }}\r\n            className=\"forgot-password-form__signin_button mt-5\"\r\n          >\r\n            <ForgotPasswordButton />\r\n            <span className=\"forgot-password-form_button-text\">\r\n              Trờ về trang chủ\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : !otpSent ? (\r\n    <Formik\r\n      onSubmit={onSubmit}\r\n      validationSchema={validationSchema(i18n)}\r\n      initialValues={getValueForm({})}\r\n    >\r\n      {(formik) => {\r\n        return (\r\n          <Form onSubmit={(ev) => ev.preventDefault()}>\r\n            <div className=\"forgot-password-page-wrapper\">\r\n              <h1 className=\"forgot-password-page__header\">Quên mật khẩu</h1>\r\n              <div style={{ position: \"relative\" }}>\r\n                <ForgotPasswordWrapper />\r\n                <div className=\"forgot-password__form-wrapper\">\r\n                  <FormField\r\n                    field=\"username\"\r\n                    {...formik}\r\n                    className=\"mt-2\"\r\n                    innerClass=\"text-center\"\r\n                    placeholder={i18n.t(`FormForgotPassword:field:user_name`)}\r\n                  ></FormField>\r\n\r\n                  <FormField\r\n                    field=\"number_phone_or_email\"\r\n                    {...formik}\r\n                    className=\"mt-2\"\r\n                    innerClass=\"text-center\"\r\n                    placeholder={i18n.t(\r\n                      `FormForgotPassword:field:number_phone_or_email`\r\n                    )}\r\n                  ></FormField>\r\n                  <p className=\"forgot-password-form_description\">\r\n                    Mã xác nhận sẽ được gửi về <br /> số điện thoại/ email để\r\n                    xác thực\r\n                  </p>\r\n                  <div\r\n                    onClick={() => {\r\n                      formik.handleSubmit()\r\n                    }}\r\n                    className=\"forgot-password-form_button\"\r\n                  >\r\n                    <ForgotPasswordButton />\r\n                    <span className=\"forgot-password-form_button-text\">\r\n                      {i18n.t(`FormForgotPassword:btn_forgot_password`)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        )\r\n      }}\r\n    </Formik>\r\n  ) : (\r\n    <div className=\"forgot-password-page-wrapper\">\r\n      <h1 className=\"forgot-password-page__header\">Quên mật khẩu</h1>\r\n      <div style={{ position: \"relative\" }}>\r\n        <ForgotPasswordWrapper />\r\n        <div className=\"forgot-password__form-wrapper\">\r\n          <Input\r\n            className=\"form-field-rounded text-center\"\r\n            onChange={(e) => setOtpCode(e.target.value)}\r\n            value={otpCode}\r\n            placeholder=\"Nhập mã OTP\"\r\n          />\r\n          <p className=\"forgot-password-form_description\">\r\n            {`Có hiệu lực trong ${countDown}s`} <br />\r\n            Chưa nhận được ?{\" \"}\r\n            <span\r\n              onClick={() => {\r\n                setStartCountDown(true)\r\n                getOtp(formData?.number_phone_or_email)\r\n              }}\r\n              className=\"forgot-password-form__resend_otp\"\r\n            >\r\n              Gửi lại\r\n            </span>\r\n          </p>\r\n          <div\r\n            onClick={onOtpSubmit}\r\n            className=\"forgot-password-form__signin_button mt-2\"\r\n          >\r\n            <ForgotPasswordButton />\r\n            <span className=\"forgot-password-form_button-text\">Xác nhận</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import PropTypes from 'prop-types'; // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/js/src/modal.js#L436-L443\n\nexport function getScrollbarWidth() {\n  var scrollDiv = document.createElement('div'); // .modal-scrollbar-measure styles // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/scss/_modal.scss#L106-L113\n\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.top = '-9999px';\n  scrollDiv.style.width = '50px';\n  scrollDiv.style.height = '50px';\n  scrollDiv.style.overflow = 'scroll';\n  document.body.appendChild(scrollDiv);\n  var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  document.body.removeChild(scrollDiv);\n  return scrollbarWidth;\n}\nexport function setScrollbarWidth(padding) {\n  document.body.style.paddingRight = padding > 0 ? padding + \"px\" : null;\n}\nexport function isBodyOverflowing() {\n  return document.body.clientWidth < window.innerWidth;\n}\nexport function getOriginalBodyPadding() {\n  var style = window.getComputedStyle(document.body, null);\n  return parseInt(style && style.getPropertyValue('padding-right') || 0, 10);\n}\nexport function conditionallyUpdateScrollbar() {\n  var scrollbarWidth = getScrollbarWidth(); // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.6/js/src/modal.js#L433\n\n  var fixedContent = document.querySelectorAll('.fixed-top, .fixed-bottom, .is-fixed, .sticky-top')[0];\n  var bodyPadding = fixedContent ? parseInt(fixedContent.style.paddingRight || 0, 10) : 0;\n\n  if (isBodyOverflowing()) {\n    setScrollbarWidth(bodyPadding + scrollbarWidth);\n  }\n}\nvar globalCssModule;\nexport function setGlobalCssModule(cssModule) {\n  globalCssModule = cssModule;\n}\nexport function mapToCssModules(className, cssModule) {\n  if (className === void 0) {\n    className = '';\n  }\n\n  if (cssModule === void 0) {\n    cssModule = globalCssModule;\n  }\n\n  if (!cssModule) return className;\n  return className.split(' ').map(function (c) {\n    return cssModule[c] || c;\n  }).join(' ');\n}\n/**\n * Returns a new object with the key/value pairs from `obj` that are not in the array `omitKeys`.\n */\n\nexport function omit(obj, omitKeys) {\n  var result = {};\n  Object.keys(obj).forEach(function (key) {\n    if (omitKeys.indexOf(key) === -1) {\n      result[key] = obj[key];\n    }\n  });\n  return result;\n}\n/**\n * Returns a filtered copy of an object with only the specified keys.\n */\n\nexport function pick(obj, keys) {\n  var pickKeys = Array.isArray(keys) ? keys : [keys];\n  var length = pickKeys.length;\n  var key;\n  var result = {};\n\n  while (length > 0) {\n    length -= 1;\n    key = pickKeys[length];\n    result[key] = obj[key];\n  }\n\n  return result;\n}\nvar warned = {};\nexport function warnOnce(message) {\n  if (!warned[message]) {\n    /* istanbul ignore else */\n    if (typeof console !== 'undefined') {\n      console.error(message); // eslint-disable-line no-console\n    }\n\n    warned[message] = true;\n  }\n}\nexport function deprecated(propType, explanation) {\n  return function validate(props, propName, componentName) {\n    if (props[propName] !== null && typeof props[propName] !== 'undefined') {\n      warnOnce(\"\\\"\" + propName + \"\\\" property of \\\"\" + componentName + \"\\\" has been deprecated.\\n\" + explanation);\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    return propType.apply(void 0, [props, propName, componentName].concat(rest));\n  };\n} // Shim Element if needed (e.g. in Node environment)\n\nvar Element = typeof window === 'object' && window.Element || function () {};\n\nexport function DOMElement(props, propName, componentName) {\n  if (!(props[propName] instanceof Element)) {\n    return new Error('Invalid prop `' + propName + '` supplied to `' + componentName + '`. Expected prop to be an instance of Element. Validation failed.');\n  }\n}\nexport var targetPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.func, DOMElement, PropTypes.shape({\n  current: PropTypes.any\n})]);\nexport var tagPropType = PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.shape({\n  $$typeof: PropTypes.symbol,\n  render: PropTypes.func\n}), PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.shape({\n  $$typeof: PropTypes.symbol,\n  render: PropTypes.func\n})]))]);\n/* eslint key-spacing: [\"error\", { afterColon: true, align: \"value\" }] */\n// These are all setup to match what is in the bootstrap _variables.scss\n// https://github.com/twbs/bootstrap/blob/v4-dev/scss/_variables.scss\n\nexport var TransitionTimeouts = {\n  Fade: 150,\n  // $transition-fade\n  Collapse: 350,\n  // $transition-collapse\n  Modal: 300,\n  // $modal-transition\n  Carousel: 600 // $carousel-transition\n\n}; // Duplicated Transition.propType keys to ensure that Reactstrap builds\n// for distribution properly exclude these keys for nested child HTML attributes\n// since `react-transition-group` removes propTypes in production builds.\n\nexport var TransitionPropTypeKeys = ['in', 'mountOnEnter', 'unmountOnExit', 'appear', 'enter', 'exit', 'timeout', 'onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'];\nexport var TransitionStatuses = {\n  ENTERING: 'entering',\n  ENTERED: 'entered',\n  EXITING: 'exiting',\n  EXITED: 'exited'\n};\nexport var keyCodes = {\n  esc: 27,\n  space: 32,\n  enter: 13,\n  tab: 9,\n  up: 38,\n  down: 40,\n  home: 36,\n  end: 35,\n  n: 78,\n  p: 80\n};\nexport var PopperPlacements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\nexport var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexport function isReactRefObj(target) {\n  if (target && typeof target === 'object') {\n    return 'current' in target;\n  }\n\n  return false;\n}\n\nfunction getTag(value) {\n  if (value == null) {\n    return value === undefined ? '[object Undefined]' : '[object Null]';\n  }\n\n  return Object.prototype.toString.call(value);\n}\n\nexport function toNumber(value) {\n  var type = typeof value;\n  var NAN = 0 / 0;\n\n  if (type === 'number') {\n    return value;\n  }\n\n  if (type === 'symbol' || type === 'object' && getTag(value) === '[object Symbol]') {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf === 'function' ? value.valueOf() : value;\n    value = isObject(other) ? \"\" + other : other;\n  }\n\n  if (type !== 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(/^\\s+|\\s+$/g, '');\n  var isBinary = /^0b[01]+$/i.test(value);\n  return isBinary || /^0o[0-7]+$/i.test(value) ? parseInt(value.slice(2), isBinary ? 2 : 8) : /^[-+]0x[0-9a-f]+$/i.test(value) ? NAN : +value;\n}\nexport function isObject(value) {\n  var type = typeof value;\n  return value != null && (type === 'object' || type === 'function');\n}\nexport function isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  var tag = getTag(value);\n  return tag === '[object Function]' || tag === '[object AsyncFunction]' || tag === '[object GeneratorFunction]' || tag === '[object Proxy]';\n}\nexport function findDOMElements(target) {\n  if (isReactRefObj(target)) {\n    return target.current;\n  }\n\n  if (isFunction(target)) {\n    return target();\n  }\n\n  if (typeof target === 'string' && canUseDOM) {\n    var selection = document.querySelectorAll(target);\n\n    if (!selection.length) {\n      selection = document.querySelectorAll(\"#\" + target);\n    }\n\n    if (!selection.length) {\n      throw new Error(\"The target '\" + target + \"' could not be identified in the dom, tip: check spelling\");\n    }\n\n    return selection;\n  }\n\n  return target;\n}\nexport function isArrayOrNodeList(els) {\n  if (els === null) {\n    return false;\n  }\n\n  return Array.isArray(els) || canUseDOM && typeof els.length === 'number';\n}\nexport function getTarget(target, allElements) {\n  var els = findDOMElements(target);\n\n  if (allElements) {\n    if (isArrayOrNodeList(els)) {\n      return els;\n    }\n\n    if (els === null) {\n      return [];\n    }\n\n    return [els];\n  } else {\n    if (isArrayOrNodeList(els)) {\n      return els[0];\n    }\n\n    return els;\n  }\n}\nexport var defaultToggleEvents = ['touchstart', 'click'];\nexport function addMultipleEventListeners(_els, handler, _events, useCapture) {\n  var els = _els;\n\n  if (!isArrayOrNodeList(els)) {\n    els = [els];\n  }\n\n  var events = _events;\n\n  if (typeof events === 'string') {\n    events = events.split(/\\s+/);\n  }\n\n  if (!isArrayOrNodeList(els) || typeof handler !== 'function' || !Array.isArray(events)) {\n    throw new Error(\"\\n      The first argument of this function must be DOM node or an array on DOM nodes or NodeList.\\n      The second must be a function.\\n      The third is a string or an array of strings that represents DOM events\\n    \");\n  }\n\n  Array.prototype.forEach.call(events, function (event) {\n    Array.prototype.forEach.call(els, function (el) {\n      el.addEventListener(event, handler, useCapture);\n    });\n  });\n  return function removeEvents() {\n    Array.prototype.forEach.call(events, function (event) {\n      Array.prototype.forEach.call(els, function (el) {\n        el.removeEventListener(event, handler, useCapture);\n      });\n    });\n  };\n}\nexport var focusableElements = ['a[href]', 'area[href]', 'input:not([disabled]):not([type=hidden])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'object', 'embed', '[tabindex]:not(.modal)', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])'];","// ** Checks if an object is empty (returns boolean)\r\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\r\n\r\n// ** Returns K format from a number\r\nexport const kFormatter = (num) =>\r\n  num > 999 ? `${(num / 1000).toFixed(1)}k` : num;\r\n\r\n// ** Converts HTML to string\r\nexport const htmlToString = (html) => html.replace(/<\\/?[^>]+(>|$)/g, '');\r\n\r\n// ** Checks if the passed date is today\r\nconst isToday = (date) => {\r\n  const today = new Date();\r\n  return (\r\n    /* eslint-disable operator-linebreak */\r\n    date.getDate() === today.getDate() &&\r\n    date.getMonth() === today.getMonth() &&\r\n    date.getFullYear() === today.getFullYear()\r\n    /* eslint-enable */\r\n  );\r\n};\r\n\r\n/**\r\n ** Format and return date in Humanize format\r\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\r\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\r\n * @param {String} value date to format\r\n * @param {Object} formatting Intl object to format with\r\n */\r\nexport const formatDate = (\r\n  value,\r\n  formatting = { month: 'short', day: 'numeric', year: 'numeric' }\r\n) => {\r\n  if (!value) return value;\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value));\r\n};\r\n\r\n// ** Returns short month of passed date\r\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\r\n  const date = new Date(value);\r\n  let formatting = { month: 'short', day: 'numeric' };\r\n\r\n  if (toTimeForCurrentDay && isToday(date)) {\r\n    formatting = { hour: 'numeric', minute: 'numeric' };\r\n  }\r\n\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value));\r\n};\r\n\r\n/**\r\n ** Return if user is logged in\r\n ** This is completely up to you and how you want to store the token in your frontend application\r\n *  ? e.g. If you are using cookies to store the application please update this function\r\n */\r\nexport const isUserLoggedIn = () => localStorage.getItem('userData');\r\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'));\r\n\r\n/**\r\n ** This function is used for demo purpose route navigation\r\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\r\n ** Please note role field is just for showing purpose it's not used by anything in frontend\r\n ** We are checking role just for ease\r\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\r\n * @param {String} userRole Role of user\r\n */\r\nexport const getHomeRouteForLoggedInUser = (userRole) => {\r\n  if (userRole === 'admin') return '/';\r\n  if (userRole === 'client') return '/access-control';\r\n  return '/login';\r\n};\r\n\r\n// ** React Select Theme Colors\r\nexport const selectThemeColors = (theme) => ({\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    primary25: '#7367f01a', // for option hover bg-color\r\n    primary: '#7367f0', // for selected option bg-color\r\n    neutral10: '#7367f0', // for tags bg-color\r\n    neutral20: '#ededed', // for input border-color\r\n    neutral30: '#ededed', // for input hover border-color\r\n  },\r\n});\r\n\r\nexport const messageError = (message, field, params = {}) => {\r\n  let str = message;\r\n  str = str.replace(/{_field_}/gi, field);\r\n  for (const i in params) {\r\n    const value = params[i];\r\n    str = str.replace(new RegExp(i, 'gi'), value);\r\n  }\r\n  return str;\r\n};\r\n\r\nexport const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n// export const phoneRegex = /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/\r\nexport const emailOrPhoneRegex =\r\n  /((84|0[3|5|7|8|9])+([0-9]{8})\\b)|(^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$)/;\r\n\r\nexport const secretPhone = (phoneNumber = '') => {\r\n  phoneNumber = phoneNumber.replace(phoneNumber.substring(4, 6), '***');\r\n  return phoneNumber;\r\n};\r\n\r\nexport const messageFormat = (message, params = {}) => {\r\n  let str = message;\r\n  for (const i in params) {\r\n    const value = params[i];\r\n    str = str.replace(new RegExp(i, 'gi'), value);\r\n  }\r\n  return str;\r\n};\r\nexport const fullNameRegex =\r\n  /^[a-zA-ZÀÁÂÃÈÉÊẾÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêếìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶ\" +\"ẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợ\"+\"ụủứừỬỮỰỲỴÝỶỸửữựỳýỵỷỹ\\s]{1,50}$/;\r\nexport const phoneRegex = /([\\+84|84|0]+(3|5|7|8|9|1[2|6|8|9]))+([0-9]{8})\\b/;\r\nexport const usernameRegex = /^[a-zA-Z0-9_\\.]+$/;\r\n\r\n// ** Converts table to CSV\r\nexport const convertArrayOfObjectsToCSV = (array) => {\r\n  let result;\r\n\r\n  const columnDelimiter = ',';\r\n  const lineDelimiter = '\\n';\r\n  const keys = Object.keys(data[0]);\r\n\r\n  result = '';\r\n  result += keys.join(columnDelimiter);\r\n  result += lineDelimiter;\r\n\r\n  array.forEach((item) => {\r\n    let ctr = 0;\r\n    keys.forEach((key) => {\r\n      if (ctr > 0) result += columnDelimiter;\r\n\r\n      result += item[key];\r\n\r\n      ctr++;\r\n    });\r\n    result += lineDelimiter;\r\n  });\r\n\r\n  return result;\r\n};\r\n\r\nexport const isFireStoreVideo = (value) => {\r\n  return /https?:\\/\\/.*\\.(?:mov|mp4)\\?.*/.test(value);\r\n};\r\n\r\nexport const isFireStoreImages = (value) => {\r\n  return /https?:\\/\\/.*\\.(?:jpg|jpeg|png|gif)\\?.*/.test(value);\r\n};\r\n\r\nexport const removeAccents = (str) => {\r\n  const AccentsMap = [\r\n    'aàảãáạăằẳẵắặâầẩẫấậ',\r\n    'AÀẢÃÁẠĂẰẲẴẮẶÂẦẨẪẤẬ',\r\n    'dđ',\r\n    'DĐ',\r\n    'eèẻẽéẹêềểễếệ',\r\n    'EÈẺẼÉẸÊỀỂỄẾỆ',\r\n    'iìỉĩíị',\r\n    'IÌỈĨÍỊ',\r\n    'oòỏõóọôồổỗốộơờởỡớợ',\r\n    'OÒỎÕÓỌÔỒỔỖỐỘƠỜỞỠỚỢ',\r\n    'uùủũúụưừửữứự',\r\n    'UÙỦŨÚỤƯỪỬỮỨỰ',\r\n    'yỳỷỹýỵ',\r\n    'YỲỶỸÝỴ',\r\n  ];\r\n  for (let i = 0; i < AccentsMap.length; i++) {\r\n    const re = new RegExp('[' + AccentsMap[i].substr(1) + ']', 'g');\r\n    const char = AccentsMap[i][0];\r\n    str = str.replace(re, char);\r\n  }\r\n  return str;\r\n};\r\n","import React from \"react\"\r\n\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport \"./style.scss\"\r\n\r\nimport {\r\n  FormFeedback,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Label,\r\n  InputGroupText,\r\n  FormGroup\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\n\r\nconst FormField = ({\r\n  field,\r\n  label,\r\n  borderless,\r\n  placeholder,\r\n  required,\r\n  prepend,\r\n  children,\r\n  append,\r\n  type,\r\n  handleChange,\r\n  handleBlur,\r\n  className,\r\n  touched = {},\r\n  errors = {},\r\n  values = {},\r\n  innerClass,\r\n  handleSubmit,\r\n  submitOnEnter,\r\n  disabled = false,\r\n  multiline = false,\r\n  onBlurCustom\r\n}) => {\r\n  const touch = touched[field]\r\n  const error = errors[field]\r\n  const value = values[field] || \"\"\r\n\r\n  const InputField = (\r\n    <Input\r\n      disabled={disabled}\r\n      className={\"form-field-rounded \" + innerClass}\r\n      invalid={Boolean(error && touch)}\r\n      onBlur={onBlurCustom || handleBlur(field)}\r\n      onChange={handleChange(field)}\r\n      value={value}\r\n      placeholder={placeholder}\r\n      required={required}\r\n      type={type}\r\n      multiple={multiline}\r\n      onKeyUp={(ev) =>\r\n        (ev.key === \"Enter\" || ev.keyCode === 13) &&\r\n        submitOnEnter &&\r\n        typeof handleSubmit === \"function\" &&\r\n        handleSubmit()\r\n      }\r\n    />\r\n  )\r\n  const ErrorField = touch && <p className=\"field-error\">{error}</p>\r\n\r\n  return (\r\n    <>\r\n      <FormGroup\r\n        className={classnames({\r\n          [className]: true,\r\n          borderless\r\n        })}\r\n        style={{ position: \"relative\" }}\r\n      >\r\n        {label && <Label className=\"form-label\">{label}</Label>}\r\n        {append || prepend ? (\r\n          <InputGroup>\r\n            {prepend && (\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>{prepend}</InputGroupText>\r\n              </InputGroupAddon>\r\n            )}\r\n            {InputField}\r\n            {append && (\r\n              <InputGroupAddon addonType=\"append\">\r\n                <InputGroupText>{append}</InputGroupText>\r\n              </InputGroupAddon>\r\n            )}\r\n            {ErrorField}\r\n          </InputGroup>\r\n        ) : (\r\n          <>\r\n            {InputField}\r\n            {ErrorField}\r\n          </>\r\n        )}\r\n        {children}\r\n      </FormGroup>\r\n    </>\r\n  )\r\n}\r\n\r\nFormField.propTypes = {\r\n  field: PropTypes.string,\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  borderless: PropTypes.bool,\r\n  prepend: PropTypes.any,\r\n  append: PropTypes.any,\r\n  type: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  handleBlur: PropTypes.func,\r\n  className: PropTypes.string,\r\n  innerClass: PropTypes.string,\r\n  touched: PropTypes.object,\r\n  errors: PropTypes.object,\r\n  values: PropTypes.object,\r\n  submitOnEnter: PropTypes.bool,\r\n  onSubmit: PropTypes.any\r\n}\r\n\r\nFormField.defaultProps = {\r\n  className: \"\",\r\n  innerclass: \"\",\r\n  submitOnEnter: true\r\n}\r\n\r\nexport default FormField\r\n"],"sourceRoot":""}